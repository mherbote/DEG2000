	TITLE	'EDITOR --- Meldephase'
	PAGE
;	PN	ED01
;****************************************************************
;*                  DEG 2000   V. 1.2     EDITOR --- Meldephase *
;*  Version         --------------------------------------------*
;*                  Programmierer: M. Herbote  K EAW  ZFT (WFT) *
;*  V 1 . 2         --------------------------------------------*
;*                  Stand        : 30.Januar 1985               *
;****************************************************************

	ORG	SD.EDITA

	DW	$
	DB	'EDIT'          ;Editor normaler Start
ED.MELAN:
	DI
; Parameter auswerten
; EDIT  { |L|0|1|2|3}
; EDIT N{ |L|0|1|2|3}
; EDIT R{ |L|0|1|2|3}
	LD	HL,SD.BWSA + 10*80 +7
	LD	A,(HL)          ;erster Parameter { |N|R}
	CP	SD.SPACE
	JR	NZ,ED.MEL12
	INC	HL
	LD	A,(HL)          ;zweiter Parameter { |L|0|1|2|3}
	CP	SD.SPACE
	JR	Z,ED.MEL1       ;altes Kommando 'ED  '
	JR	ED.MEL21

ED.MEL12:
	CP	'N'
	JR	NZ,ED.MEL13
	CALL	SY.QTABL        ;Standard TABs setzen (0,9,15,34)
	JR	ED.MEL22

ED.MEL13:
	CP	'R'
	JP	NZ,SY.SYSTB	;erster Parameter nicht { |N|R}
ED.MEL22:
	INC	HL
	LD	A,(HL)
ED.MEL21:
	CP	'L'
	JR	NZ,ED.MEL14
	CALL	PF.INIT1        ;Init Bereich ab (SM.PTS)
	JR	ED.MEL1

ED.MEL14:
	CP	'0'
	JR	NZ,ED.MEL15
	CALL	S1.EDN          ;Uebernahme aus Editorbereich nach FC00H
	JR	ED.MEL1

ED.MEL15:
	CP	'1'
	JR	NZ,ED.MEL16
	LD	HL,PF.O1ANF
	LD	DE,PF.O1END
	JR	ED.MEL18
ED.MEL16:
	CP	'2'
	JR	NZ,ED.MEL17
	LD	HL,PF.O2ANF
	LD	DE,PF.O2END
	JR	ED.MEL18
ED.MEL17:
	CP	'3'
	JR	NZ,ED.MEL19
	LD	HL,PF.O3ANF
	LD	DE,PF.O3END

ED.MEL18:
	LD	(SM.PTSA),HL
	LD	(SM.PTSE),DE
ED.MEL19:
	JR	ED.MEL1

ED.MEL2:
	CALL	ED.UMLKP

; Eintrittspunkt fuer 'ED  ' und 'EDN '
ED.MEL1:
	CALL	SY.BILO         ;Bild loeschen
ED.MEL11:
	CALL	E2.RESET
	CALL	E1.PUFLO        ;TP loeschen
	CALL	SY.MEMLA        ;Fkt.Tast. u. RAM definieren
	LD	HL,ED.MELNL
	LD	(SM.FKTAB+(2*SM.FPQ)),HL
	LD	HL,0
	LD	(SM.NEWL),HL	;NL--Taste def.
	LD	A,(SM.ZANZ)
	DEC	A
	LD	(SM.ZMIN),A
	LD	(SM.ZMAX),A	;Format: vorletzte Zeile
	CALL	SY.BWSAF
	EX	DE,HL
	LD	HL,ED.ZED1
	CALL	SY.MELD	;Ausschrift
	EX	DE,HL
ED.MEL3:
	CALL	SY.LCPOS
	CALL	SY.KOM	;Format ab CPOS
	CALL	SY.DELZL
	RET

;NL-Funktion in Meldephase

ED.MELNL:
	XOR	A
	LD	(SM.FSTAT),A
	CALL	S1.STANL	;Z=0 falls nur Space
	JR	Z,ED.VOLLF
	CP	'F'
	JR	Z,ED.FREI
	CP	'Q'
	JR	Z,ED.QUELL
ED.ERRO1:
	LD	C,1	;falsche Formatanweisung
	JP	S1.ERROR

ED.QUELL:
	LD	A,80H
	LD	(SM.FSTAT),A	;Quellcode Status
	LD	HL,SM.TABZ
	LD	M,SD.QTAB1
	INC	HL
	LD	M,SD.QTAB2
	INC	HL
	LD	M,SD.QTAB3
	INC	HL
	LD	M,SD.QTAB4
ED.VOLLF:
	LD	HL,(SM.ZANZ)	;volles Format laden
ED.FREI2:
	DEC	L
	DEC	L
	LD	(SM.ZMAX2),HL
ED.KOMA2:
	LD	HL,0
	LD	(SM.ZPOS2),HL
	INC	H
	INC	L
	LD	(SM.ZMIN2),HL	;SPOS2,ZPOS2=SMIN2-1,ZMIN2-1
	LD	HL,ED.MEL1
	JR	ED.KOMA3

ED.FREI:
	EX	DE,HL
	LD	IX,SM.SPANZ
	XOR	A
	EX	AF,AF'
	CALL	S1.LT1Z	;freies Format
	EX	DE,HL	;A<E=<(IX+0) BEI Z=CY=0
	JR	Z,ED.VOLLF
	JR	C,ED.ERRO1
	LD	HL,(SM.ZANZ)
	LD	H,E
	JR	ED.FREI2

;Kommandophase

ED.KOMA1:
	CALL	S1.FOEX	;CPOS + Arb.Form. --> Zweitmerker
	CALL	SY.FKTLA	;RAM neu laden
	LD	HL,ED.MEL2	;Syst.Taste neu
ED.KOMA3:
	LD	(SM.FKTAB+(2*SM.FSYS)),HL
	LD	HL,ED.KONEV
	LD	(SM.FKTAB+(2*SM.FPQ)),HL
	LD	HL,ED.KONER
	LD	(SM.FKTAB+(2*SM.FPQ)),HL
	LD	HL,SM.UMERK
	LD	M,0
	LD	DE,SM.UMERK+1
	LD	BC,SM.LOE1-1
	CALL	SY.RALO1	;volles Format
	LD	A,L
	LD	(SM.ZMIN),A	;Format letzte Zeile
	LD	HL,SY.AEIN
	CALL	SY.MEML1	;NEWL,DELZ,EINA laden
	LD	HL,S1.UMS
	LD	(SM.USCH),HL
	CALL	SY.BWSAF
	JP	ED.MEL3

;Start--Funktion in Kommandophase

ED.KONEV:
	CALL	ED.KOEIN
	LD	HL,SM.STAT
	SET	7,M
	JP	E2.TEX

ED.KONER:
	CALL	ED.KOEIN
	LD	HL,SM.STAT
	RES	7,M
	JP	E2.TEX

ED.KOEIN:
	CALL	ED.UMLKP
	CALL	S1.STANL
	CALL	NZ,E3.KOMAN
ED.ARBPH:
	CALL	S1.FOEX
ED.ARBFK:
	LD	HL,ED.FALFT     ;Fkt. fuer Arb.Phase init.
	LD	DE,SM.FKTAB
	LD	BC,0A0H
	LDIR
	LD	HL,ED.FALAT
	LD	DE,SM.USCH
	LD	BC,12
	LDIR
	RET

ED.UMLKP:
	CALL	S1.FOEX         ;AUSTAUSCH FORMATMERKER <--> ZWEITMERKER
	CALL	E2.UML
	CALL	E1.LOEBP        ;Bildpuffer loeschen
	CALL	S1.FOEX         ;AUSTAUSCH FORMATMERKER <--> ZWEITMERKER
	RET

;Fkt.Adressliste Alphatastatur
ED.FALAT:
	DW	S1.UMS
	DW	E1.TAB
	DW	E1.DELZ
	DW	E1.LEERZ
	DW	E1.CNEW
	DW	E1.ZSCHS

;Funktionsadressliste Funktionstastatur
ED.FALFT:
	DW	E1.HT      ;00	ET2
	DW	E1.TCNZA   ;01	ET1

	DW	E1.TCNLS   ;02	NewLine
	DW	E1.TCNUS   ;03  Down
	DW	E2.TEXV    ;04	PosQuit

	DW	E1.TCNLS   ;05	Left
	DW	E1.THOME   ;06	Home / Pos1
	DW	E1.TCNRS   ;07	Right

	DW	E1.ATTR    ;08	TAB Left
	DW	E1.TCNOS   ;09	Up
	DW	E1.REPEL   ;10	TAB Right

	DW	0          ;11	INS MOD
	DW	0          ;12	DEL
	DW	0          ;13	INS LIN
	DW	0          ;14	DEL LIN

	DW	E1.TABS    ;15	TAB setzen
	DW	E1.TABL    ;16	TAB loeschen

	DW	E1.PS      ;17	CI
	DW	0          ;18	M
	DW	0          ;19	RESET

	DW	0          ;20	ESC
	DW	0          ;21	CTRL
	DW	0          ;22	CE

	DW	SY.IFKT4   ;23	00
	DW	SY.IFKT3   ;24	000
	DW	E2.TEXR    ;25	NeqQuit
	DW	ED.KOMA1   ;26	SYS
	DW	0          ;27	END
	DW	E1.ABS     ;28	ABS

	DW	0          ;29	E=0
	DW	0          ;30	E=1
	DW	0          ;31	E=2
	DW	0          ;32	E=3

	DW	E1.PTS1    ;33	PF01
	DW	E1.PTS2    ;34	PF02
	DW	E1.PTS3    ;35	PF03
	DW	E1.PTS4    ;36	PF04
	DW	E1.PTS5    ;37	PF05
	DW	E1.PTS6    ;38	PF06
	DW	E1.PTS7    ;39	PF07
	DW	E1.PTS8    ;40	PF08
	DW	E1.PTS9    ;41	PF09
	DW	E1.PTS10   ;42	PF10
	DW	E1.PTS11   ;43	PF11
	DW	E1.PTS12   ;44	PF12

	DW	E1.PTS13
	DW	E1.PTS14
	DW	E1.PTS15
	DW	E1.PTS16
	DW	E1.PTS17
	DW	E1.PTS18
	DW	E1.PTS19
	DW	E1.PTS20
	DW	E1.PTS21
	DW	E1.PTS22
	DW	E1.PTS23
	DW	E1.PTS24
	DW	E1.PTS25
	DW	E1.PTS26
	DW	E1.PTS27
	DW	E1.PTS28
	DW	E1.PTS29
	DW	E1.PTS30
	DW	E1.PTS31
	DW	E1.PTS32
	DW	E1.PTS33
	DW	E1.PTS34
	DW	E1.PTS35
	DW	E1.PTS36
	DW	E1.PTS37
	DW	E1.PTS38
	DW	E1.PTS39
	DW	E1.PTS40
	DW	E1.PTS41
	DW	E1.PTS42
	DW	E1.PTS43
	DW	E1.PTS44
	DW	E1.PTS45
	DW	E1.PTS46
	DW	E1.PTS47
	DW	E1.PTS48

ED.ZED1:
	DB	LOW(ED.LZED1)
	DB	'EDITOR   FORMAT'
ED.LZED1 EQU    $-ED.ZED1-1

			;Stand: 30.Januar 85 - K EAW/wfvm..MSH

;	END
	TITLE 'EDITOR --- Arbeitsphase'
	PAGE
;	PN	E101
;****************************************************************
;*                  DEG2000 V. 1.2    EDITOR --- Arbeitsphase   *
;*  Version         --------------------------------------------*
;*                  Programmierer: M. Herbote  K EAW  ZFT (WFT) *
;*  V 1 . 2         --------------------------------------------*
;*                  Stand        : 30.Januar 1985               *
;****************************************************************

;Alphazeichen schreiben

E1.ZSCHS:
	LD	A,1
	LD	(SM.ZSMER),A
E1.ZSCHR:
	LD	A,C
E1.ZSCH1:
	CALL	SY.CPOS
	LD	M,A
	CALL	SY.ICPOS
	JR	E1.CNEW2

;NL-Funktion

E1.CNEW:
	CALL	SY.CPOS
	LD	M,C
	LD	BC,(SM.SPOS)
	LD	B,0
	INC	C
	DEC	C
	JR	Z,E1.CNEW3
	LD	A,M
	DEC	HL
	CPDR
	JR	NZ,E1.CNEW3
	INC	HL
	LD	M,SD.SPACE
E1.CNEW3:
	CALL	SY.ISPOS
	JR	C,E1.CNEW1
	CALL	S1.SPOSN
	CALL	SY.DEL2
	LD	A,(SM.SMIN)
	DEC	A
	LD	(SM.SPOS),A
E1.CNEW1:
	CALL	SY.IZPOS
E1.CNEW2:
	CALL	C,SY.DZPOS
	CALL	C,E1.LIFT
	CALL	E1.ZNUM
	RET

;1.Bildzeile umladen

E1.UMLZ1:
	LD	BC,(SM.SPANZ)
	LD	B,0
	CALL	E2.UMLT
	LD	(SM.WINA),HL
E1.ZEINR:
	LD	BC,SD.TPA
	CALL	E2.LANG
	CALL	E2.ZNX2
	LD	(SM.ZEIZ),DE
	RET

E1.LIFT:
	CALL	E1.UMLZ1
	LD	A,(SM.ZMAX)
E1.LIFT1:
	DEC	A
	CALL	E1.BIL1
	PUSH	HL
	POP	BC
	CALL	SY.DESZ
	PUSH	DE
	EX	DE,HL
	LD	DE,SD.BWSA
	ADD	HL,DE	;HL=BWSA+(SPANZ)
	LDIR
	POP	BC
	LD	B,C
	EX	DE,HL
	CALL	SY.DEL1
	RET

;Bildpuffer loeschen
E1.LOEBP:
	CALL	E1.BIL
E1.LOBP1:
	LD	BC,SD.BWSA-SD.BPA-1
	ADD	HL,BC
	PUSH	HL
	POP	BC
	JR	E1.PULO
E1.PUFLO:
	LD	BC,SD.BWSA-SD.BPA-1
E1.PULO:
	LD	HL,SD.BPA
	LD	M,SD.SPACE
	LD	DE,SD.BPA+1
	LDIR
	RET

;BWS Laenge

E1.BIL:
	LD	A,(SM.ZMAX)
E1.BIL1:
	LD	HL,0
	CALL	SY.AMSZ
	RET		;HL=Laenge   BC,DE unveraendert

;Leerzeile einfuegen

E1.LEERZ:
	LD	HL,SM.ZPOS
	XOR	A
	OR	M
	RET	Z
	DEC	M
	PUSH	AF
	CALL	E1.UMLZ1
	POP	AF
	JR	NZ,E1.LIFT1
	LD	A,(SM.SPANZ)
	LD	HL,SD.BWSA
	JP	SY.DEL2

;Tabulator Aufruf

E1.TAB:
	CALL	E1.TAUP
	JR	NC,E1.TAB1
	LD	A,M
	LD	HL,(SM.SMAX)
	CP	L
	JR	NC,E1.TAB1
E1.TAB2:
	LD	(SM.SPOS),A
	RET	Z
	CALL	E2.RUFTF
	RET	NZ
	LD	A,SD.TAB
	JP	E1.ZSCH1

E1.TAB1:
	LD	A,(SM.SMIN)
	DEC	A
	JR	E1.TAB2

E1.TAUP:
	LD	A,(SM.SPOS)
E1.TAUP2:
	LD	HL,SM.TABZ
	LD	B,SD.TABZA
E1.TAUP1:
	CP	M
	RET	C	;CY=1: gefunden
	INC	HL
	DJNZ	E1.TAUP1
	RET

;Tabulator setzen

E1.TABS:
	CALL	E1.TAUP
	JR	C,E1.TABS1
	DEC	HL
	INC	B
E1.TABS1:
	DJNZ	E1.TABS3
	LD	M,A
	RET
E1.TABS3:
	LD	C,A
	LD	A,SD.TABZA
	CP	B
	LD	A,C
	JR	Z,E1.TABS4
	DEC	HL
	CP	M
	RET	Z
E1.TABS4:
	LD	C,B
	LD	B,0
	ADD	HL,BC
	PUSH	HL
	POP	DE
	INC	DE
	LDDR
	LD	(DE),A
	RET

;Tabulator loeschen

E1.TABL:
	CALL	E1.TAUP
	JR	C,E1.TABL1
	DEC	HL
	CP	M
	RET	NZ
	LD	M,-1
	RET
E1.TABL1:
	LD	C,A
	LD	A,SD.TABZA
	CP	B
	RET	Z
	LD	A,C
	DEC	HL
	CP	M
	RET	NZ
	LD	C,B
	LD	B,0
	PUSH	HL
	POP	DE
	INC	HL
	LDIR
	LD	A,-1
	LD	(DE),A
	RET

;Cursor Funktionen

E1.TCNRS:
	CALL	SY.CNRS
	JR	E1.TCUR
E1.TCNLS:
	CALL	SY.CNLS
	JR	E1.TCUR
E1.TCNOS:
	CALL	SY.CNOS
	JR	E1.TCUR
E1.TCNUS:
	CALL	SY.CNUS
	JR	E1.TCUR
E1.TCNZA:
	CALL	SY.IFKT2
	JR	E1.TCUR
E1.THOME:
	CALL	SY.IFKT1
E1.TCUR:
	CALL	E1.ZNUM
	RET

;Anzahl der NL zwischen BWSA und ZLPOS

E1.BIZA:
	CALL	SY.ZLPOS
	INC	HL
	LD	BC,SD.BWSA
	CALL	E2.LANG
	CALL	E2.ZNX2
	DEC	DE	;DE=NL Anzahl
	RET

;Zeilennummer ausschreiben

E1.ZNUM:
	CALL	E1.BIZA
	LD	HL,(SM.ZEIZ)
	ADD	HL,DE
	JR	E1.NUM1
E1.NUM:
	LD	HL,(SM.ZEIZ)
E1.NUM1:
	LD	BC,-13
	LD	A,(SM.ZANZ)
	LD	DE,S1.ZS12
	JP	S1.MELDN

;Absatz einfuegen

E1.ABS:
	CALL	E1.REPEL
	CALL	SY.CPOS
	LD	M,SD.NL
	LD	A,0
	LD	(SM.ZSMER),A
	LD	HL,SM.STAT
	SET	4,M
	JP	E2.TEXL

;Zeichen rechts von Cursor heranziehen

E1.ATTR:
	CALL	SY.CPOS
	LD	IX,S1.RNL
	LD	M,SD.SPACE
E1.ATTR1:
	CALL	S1.SPOSN
	DEC	A
	RET	Z
	LD	C,A
	LD	B,0
	CALL	S1.MX
	LD	HL,SM.ZSMER
	LD	M,1
	RET

;Zeichen rechts von Cursor wegschieben

E1.REPEL:
	CALL	S1.ZENDF
	LD	A,M
	CP	SD.SPACE
	RET	NZ
	LD	IX,S1.RNR
	JR	E1.ATTR1

;Zeile loeschen

E1.DELZ:
	CALL	SY.DELZL
	CALL	SY.IZPOS
	CALL	C,SY.DZPOS
	CALL	E1.ZNUM
	RET

	PAGE
;Aufruf programmierter Textelemente

E1.PTS1:	NOP
E1.PTS2:	NOP
E1.PTS3:	NOP
E1.PTS4:	NOP
E1.PTS5:	NOP
E1.PTS6:	NOP
E1.PTS7:	NOP
E1.PTS8:	NOP
E1.PTS9:	NOP
E1.PTS10:	NOP
E1.PTS11:	NOP
E1.PTS12:	NOP
E1.PTS13:	NOP
E1.PTS14:	NOP
E1.PTS15:	NOP
E1.PTS16:	NOP
E1.PTS17:	NOP
E1.PTS18:	NOP
E1.PTS19:	NOP
E1.PTS20:	NOP
E1.PTS21:	NOP
E1.PTS22:	NOP
E1.PTS23:	NOP
E1.PTS24:	NOP
E1.PTS25:	NOP
E1.PTS26:	NOP
E1.PTS27:	NOP
E1.PTS28:	NOP
E1.PTS29:	NOP
E1.PTS30:	NOP
E1.PTS31:	NOP
E1.PTS32:	NOP
E1.PTS33:	NOP
E1.PTS34:	NOP
E1.PTS35:	NOP
E1.PTS36:	NOP
E1.PTS37:	NOP
E1.PTS38:	NOP
E1.PTS39:	NOP
E1.PTS40:	NOP
E1.PTS41:	NOP
E1.PTS42:	NOP
E1.PTS43:	NOP
E1.PTS44:	NOP
E1.PTS45:	NOP
E1.PTS46:	NOP
E1.PTS47:	NOP
E1.PTS48:
	LD	DE,E1.PTS1-1
	OR	A
	SBC	HL,DE
	CALL	E1.PTSNR
	RET	C
	RET	PO
E1.PTS92:
	XOR	A
	OR	M
	RET	Z
	PUSH	HL
	CP	SD.NL
	JR	Z,E1.PTS91
	CALL	E1.ZSCH1
	JR	E1.PTS93
E1.PTS91:
	LD	C,A
	CALL	E1.CNEW
E1.PTS93:
	POP	HL
	INC	HL
	JR	E1.PTS92

E1.PTSNR:
	EX	DE,HL
	LD	BC,(SM.PTSA)
	LD	HL,(SM.PTSE)
	CALL	E2.LANG
	RET	C
	XOR	A
E1.PTSN1:
	DEC	E
	JR	Z,E1.PTSN2
	CPIR
	RET	PO
	JR	E1.PTSN1
E1.PTSN2:
	XOR	A
	RET		;P/V=1

E1.PTEST:
	LD	BC,(SM.PTS)
	LD	HL,(SM.PTSA)
	XOR	A
	SBC	HL,BC
	RET
E1.PS:
	CALL	E1.PTEST
	JR	Z,E1.PS1
	LD	(SM.PTSA),BC
	LD	HL,SD.RAM+3FFH
	XOR	A
	SBC	HL,BC
	PUSH	BC
	EX	(SP),HL
	POP	BC
E1.PS2:
	LD	E,SD.PSANZ+1
	CALL	E1.PTSN1
	LD	(SM.PTSE),HL
	RET
E1.PS1:
	LD	HL,PF.O1ANF	;PF.PFT1
	LD	(SM.PTSA),HL
	LD	BC,3FFH
	JR	E1.PS2
E1.HT:
	LD	A,9
	JP	E1.ZSCH1
			;Stand: 30.Januar 85 - K EAW/wfvm..MSH

;	END
	TITLE	'EDITOR --- Textaufruf'
	PAGE
;	PN	E201
;****************************************************************
;*                  DEG2000  V. 1.2   EDITOR --- Textaufruf     *
;*  Version         --------------------------------------------*
;*                  Programmierer: M. Herbote  K EAW  ZFT (WFT) *
;*  V 1 . 2         --------------------------------------------*
;*                  Stand        : 30.Januar 1985               *
;****************************************************************
E2.TEXV:
	LD	HL,SM.STAT
	SET	7,M
	JR	E2.TEXS
E2.TEXR:
	LD	HL,SM.STAT
	RES	7,M
E2.TEXS:
	LD	A,1
	LD	(SM.ZSMER),A
E2.TEXL:
	CALL	E2.UML
	CALL	E1.LOEBP
	LD	DE,(SM.END)
	LD	HL,(SM.PTS)
	OR	A
	SBC	HL,DE
	JR	C,E2.ERR99
	LD	DE,5000
	SBC	HL,DE
	CALL	C,E2.TEXW
E2.TEX:
	CALL	E2.QLANG
	RET	C
	CALL	E2.TEXV1
	PUSH	HL
	POP	BC	;BC=WINE
	CALL	E2.LANG1
	CALL	NC,E2.SET
	CALL	C,E2.RESET
	CALL	SY.CPOS
	PUSH	HL
	XOR	A
	LD	(SM.ZPOS),A
E2.TEXV3:
	LD	BC,(SM.WINE)
	CALL	E2.LANG1
	JR	C,E2.TEXV2
	CALL	E2.RUFT	;Zeilenaufruf
	LD	HL,SM.ZPOS
	INC	M
	LD	A,(SM.ZMAX)
	DEC	A
	CP	M
	JR	NC,E2.TEXV3
E2.TEXV2:
	POP	HL
	CALL	SY.LCPOS	;Cursor einsetzen
	CALL	E1.ZNUM
	RET

E2.TEXW:
	ADD	HL,DE	;Warnung Speicher voll
	LD	DE,S1.ZS13
	LD	A,(SM.ZANZ)
	LD	BC,-22
	JP	S1.MELDE

E2.RESET:
	LD	HL,1
	LD	(SM.ZEIZ),HL
	LD	HL,SD.TPA
E2.SET:
	LD	(SM.WINA),HL
	LD	(SM.WINE),HL
	RET

E2.ERR99:
	LD	C,99	;Speicherueberlauf
	JR	E2.ERR5A
E2.ERR7A:
	LD	C,7	;Zeichenkette nicht vorhanden
	JR	E2.ERR5A
E2.ERRO5:
	LD	C,5	;Zeilennummer zu gross
E2.ERR5A:
	JP	E3.ERRR

E2.TEX0:
	PUSH	HL
	LD	HL,SM.STAT
	RES	4,M
	LD	HL,(SM.ZEIZ)
	LD	DE,(SM.BZA)
	LD	D,0
	ADD	HL,DE
	JR	E2.ZNR2

E2.TEXV1:
	LD	A,(SM.STAT)	;pruefen Statusbits
	BIT	4,A
	JR	NZ,E2.TEX0
	BIT	3,A
	JR	NZ,E2.NZEI
	BIT	2,A
	JP	NZ,E2.MRK
	BIT	1,A
	JR	NZ,E2.ZNR
	BIT	7,A
	JR	Z,E2.SPR
	LD	HL,(SM.WINE)
	PUSH	HL
	LD	BC,(SM.WINA)
	CALL	E2.LANG
	CALL	E2.ZNX2
	LD	HL,(SM.ZEIZ)
	ADD	HL,DE
	LD	(SM.ZEIZ),HL
	POP	HL
	RET

E2.SPR:
	LD	DE,(SM.ZMAX)
	LD	D,0
	JR	E2.NZEI8

E2.ZNR:
	LD	A,1
	LD	(SM.STAT),A
	PUSH	HL
	LD	HL,(SM.ZEIZ)
E2.ZNR2:
	CALL	E2.NKORR
	EX	DE,HL
	POP	HL
	CALL	E2.ZNR1
	JP	PO,E2.ERRO5
	RET

E2.ZNR1:
	DEC	DE	;BC=Textlaenge
E2.ZNR0:
	LD	A,D	;HL=Textanfang
	OR	E
	RET	Z
	LD	A,1EH
	CPIR
	RET	PO
	JR	E2.ZNR1	;HL=WINE neu

E2.NZEI:
	LD	DE,(SM.WEITE)	;+/- n Zeilen
E2.NZEI8:
	LD	BC,(SM.ZEIZ)
	LD	HL,(SM.BZA)
	LD	H,0
	ADD	HL,BC
	BIT	7,A
	JR	NZ,E2.NZEIV
	SCF
	SBC	HL,DE
	INC	HL
	JR	NC,E2.NZEIR
	EX	DE,HL
E2.NZEI7:
	PUSH	DE
	CALL	E2.ZNUMX
	POP	HL
	ADD	HL,DE	;HL<=0!
	LD	(SM.ZEIZ),HL
	EX	DE,HL
E2.NZEI6:
	CALL	E2.QLANG
	CALL	E2.ZNR1
	RET

E2.NZEIV:
	ADD	HL,DE
	PUSH	HL
	PUSH	BC
	CALL	E2.ZNUMX
	POP	BC
	POP	HL
	OR	A
	SBC	HL,DE
	JP	NC,E2.RESET
	ADD	HL,DE
E2.NZEIR:
	CALL	E2.NKORR
	OR	A
	SBC	HL,BC
	EX	DE,HL	;DE=Weite
	LD	HL,(SM.WINA)
	RET	Z
	JR	C,E2.NZEI4
	PUSH	HL
	POP	BC
	CALL	E2.LANG1
	RET	C
	CALL	E2.ZNR0
	RET

E2.NZEI4:
	LD	BC,SD.TPA
	CALL	E2.LANG
	JR	C,E2.NZEI7
	ADD	HL,BC
	DEC	HL
	INC	BC
E2.NZEI1:
	LD	A,1EH
	CPDR
	JR	NZ,E2.NZEI3
	LD	A,D
	OR	E
	INC	DE
	JR	NZ,E2.NZEI1
E2.NZEI3:
	INC	HL
	INC	HL
	RET

E2.NKORR:
	LD	DE,(SM.ZPOS)
	LD	D,0
	SCF
	SBC	HL,DE
	INC	HL
	JR	NC,E2.NKOR1
	ADD	HL,DE
	LD	A,L
	DEC	A
	LD	(SM.ZPOS),A
	LD	HL,1
E2.NKOR1:
	LD	(SM.ZEIZ),HL
	RET

E2.QLANG:
	LD	BC,SD.TPA
E2.LANG1:
	LD	HL,(SM.END)
E2.LANG:
	SCF		;HL=Q.Ende  BC=Q.Anfang
	SBC	HL,BC
	INC	HL
	PUSH	BC
	EX	(SP),HL
	POP	BC	;BC=Q.Laenge   HL=Q.Anfang
	RET		;CY=1 falls BC<=0

E2.SUCH:
	LD	DE,SM.ZKA
	LD	A,(DE)
	CPIR
	SCF
	RET	PO
	PUSH	HL
	DEC	HL
E2.SUCH1:
	PUSH	BC
	LD	A,(SM.LZA)
	LD	B,A
	CALL	SY.VERGL
	SCF
	CCF
	POP	BC
	POP	HL	;CY=1 Fehler
	RET		;CY=0 Z=1 falls Zeichenkette gefunden

E2.SUCHR:
	LD	DE,SM.ZKA
	LD	A,(DE)
	CPDR
	SCF
	RET	PO
	PUSH	HL
	INC	HL
	JR	E2.SUCH1

E2.MARKR:
	CALL	E2.LANG1
	JR	C,E2.MRKR1
	LD	DE,(SM.BZA)
	LD	D,0
	CALL	E2.ZNR0
E2.MRKR1:
	LD	BC,SD.TPA
	CALL	E2.LANG
	JR	C,E2.MRKR4
	ADD	HL,BC
	DEC	HL
	INC	BC
E2.MRKR3:
	CALL	E2.SUCHR
	JR	C,E2.MRKR4
	JR	NZ,E2.MRKR3
	INC	HL
	JR	E2.MRK2
E2.MRKR4:
	CALL	E2.QLANG
	ADD	HL,BC
	DEC	HL
	INC	BC
E2.MRKR2:
	CALL	E2.SUCHR
	JP	C,E2.ERR7A
	JR	NZ,E2.MRKR2
	INC	HL
	JR	E2.MRK2

E2.MRK:
	LD	BC,(SM.WINA)
	BIT	7,A
	JR	Z,E2.MARKR
	CALL	E2.LANG1
	JR	C,E2.MRK4
	LD	DE,(SM.BZA)
	LD	D,0
	INC	E
	CALL	E2.ZNR0
	JP	PO,E2.MRK4
E2.MRK3:
	CALL	E2.SUCH
	JR	C,E2.MRK4
	JR	NZ,E2.MRK3
	DEC	HL
	JR	E2.MRK2
E2.MRK4:
	CALL	E2.QLANG
E2.MRK1:
	CALL	E2.SUCH
	JP	C,E2.ERR7A
	JR	NZ,E2.MRK1
	DEC	HL
E2.MRK2:
	LD	BC,SD.TPA
	INC	HL
	CALL	E2.LANG
	PUSH	HL
	PUSH	BC
	CALL	E2.ZNX2
	EX	DE,HL
	CALL	E2.NKORR
	EX	DE,HL
	POP	BC
	POP	HL
	CALL	E2.ZNR1
	RET

E2.ZNUMX:
	CALL	E2.QLANG
E2.ZNX2:
	LD	A,1EH
	LD	DE,0
	RET	C
E2.ZNX1:
	INC	DE
	CPIR
	RET	PO		;DE=Zeilenanzahl, HL=(END)
	JR	E2.ZNX1

;TEXTAUFRUF AUS TEXTPUFFER

E2.RUFTF:
	LD	A,(SM.FSTAT)
	CP	80H
	RET

E2.RUFT:
	LD	A,(SM.SMIN)	;HL=WINE  BC=Laenge
	DEC	A
	LD	(SM.SPOS),A
	CALL	S1.SPOSN
	INC	B
	DEC	B
	JR	NZ,E2.RUF5
	CP	C
	JR	C,E2.RUF5
	LD	A,C
E2.RUF5:
	LD	C,A
	LD	B,0
	PUSH	HL
	LD	A,SD.NL
	LD	E,C
	CPIR
	JR	Z,E2.RUF3
	DEC	HL
	LD	C,E
	CALL	E2.RUFTF
	JR	Z,E2.RUFQ2
	LD	A,SD.SPACE
	CPDR
	JR	Z,E2.RUF2
	LD	C,E
	DEC	C
	JR	NZ,$+3
	INC	C
	POP	HL
	CALL	E2.RUF1
	LD	A,SD.NL
	LD	(DE),A
	RET
E2.RUF2:
	JP	PO,E2.RUF6
	CPD
	JR	Z,E2.RUF2
	INC	HL
	INC	BC
E2.RUF6:
	INC	HL
	LD	M,SD.NL
	INC	BC
	POP	HL
	JR	E2.RUF1

E2.RUF3:
	LD	A,E
	SUB	C
	LD	C,A
	POP	HL
	CALL	E2.RUFTF
	JR	Z,E2.RUFQ
E2.RUF1:
	EX	DE,HL
	CALL	SY.CPOS
	EX	DE,HL
E2.RUF4:
	LDIR
	LD	(SM.WINE),HL
	RET

E2.RUFQ4:
	INC	DE
E2.RUFQ3:
	CALL	SY.CPOS
	LD	B,3
E2.RUFQ5:
	LD	M,'#'
	INC	HL
	DJNZ	E2.RUFQ5
	INC	HL
	CALL	S1.SPOSN
	SUB	5
	CP	C
	JR	NC,$+3
	LD	C,A
	EX	DE,HL
	CALL	E2.KOMZ3
	LD	M,'#'
	JP	E2.KOMZ4

E2.RUFQ1:
	CALL	SY.CPOS
	EX	DE,HL
	INC	C
	JP	E2.KOMTR

E2.RUFQ2:
	POP	DE
	LD	A,(DE)
	CP	3BH
	JR	Z,E2.RUFQ1
	CP	'#'
	JR	Z,E2.RUFQ4
	LD	A,3BH
	PUSH	BC
	CPDR
	POP	BC
	JR	NZ,E2.RUFQ3
	EX	DE,HL

E2.RUFQ:
	LD	B,C	;Quellkodeaufruf und Sortieren
	CALL	SY.SZEI4
	JR	Z,E2.OP1
	LD	C,B
	LD	B,0
	CP	'#'
	JP	Z,E2.RUF1
	CP	3BH
	JP	Z,E2.RUF1
	PUSH	HL
	LD	A,3BH
	LD	E,C
	CPIR		;allgemeiner Kommentar ?
	CALL	Z,E2.KOM
	POP	HL	;Marke ?
	PUSH	HL
	LD	C,E
	LD	A,':'	;Doppelpunkt-Suche
	CPIR
	POP	HL
	JR	NZ,E2.OPCO	;Sprung, falls keine Marke
E2.MARK:
	LD	A,E
	SUB	C	;Markenlaenge einstellen
	LD	C,A
	PUSH	HL
	PUSH	BC
	LD	A,27H	;Literalsuche
	CPIR
	POP	BC
	POP	HL
	JR	Z,E2.OPCO	;keine Marke falls Literal
	CALL	E2.POSI0
	LDIR
	CALL	SY.SZEI4
E2.OPCO:
	LD	A,(SM.TABZ+1)
	CALL	E2.POSIT
E2.OP2:
	LD	A,M
	CP	SD.SPACE
	JR	Z,E2.OPRD
	LDI
	CP	SD.NL
	JR	NZ,E2.OP2
E2.OP1:
	LD	(SM.WINE),HL
	RET

E2.OPRD:
	LD	A,(SM.TABZ+2)
	CALL	E2.POSIT
	CALL	SY.SZEI2
E2.OP3:
	CP	3BH	;Semikolon
	RET	Z
	LDI
	CP	SD.NL
	JR	Z,E2.OP1
	CP	27H
	LD	A,M
	JR	NZ,E2.OP3
E2.OP4:
	LDI
	CP	27H
	LD	A,M
	JR	Z,E2.OP3
	JR	E2.OP4

E2.KOM:
	PUSH	HL
	PUSH	BC
	LD	A,E
	SUB	C
	LD	C,A
	LD	A,27H
	DEC	HL
	CPDR
	JR	NZ,E2.KOM3
	CPDR
	JR	Z,E2.KOM3
	POP	BC
	POP	HL
	LD	A,3BH
	CPIR
	RET	NZ
E2.KOM3:
	POP	BC
	POP	HL
	LD	A,E
	SUB	C
	LD	E,A
	PUSH	DE
	INC	BC
	DEC	HL
	LD	A,(SM.TABZ+3)
	CALL	E2.POSIT
	CALL	E2.KOMTR
	POP	DE
	RET

E2.KOMTR:
	CALL	S1.SPOSN
	SUB	C
	JP	NC,E2.RUF4
	ADD	A,C
	DEC	A
	LD	C,A
	PUSH	BC
	PUSH	HL
	ADD	HL,BC
	LD	A,SD.SPACE
	CPDR
	POP	HL
	CALL	Z,E2.KOMZ2
	POP	BC
	CALL	NZ,E2.KOMZ3
	LD	M,3BH
E2.KOMZ4:
	LD	A,SD.NL
	LD	(DE),A
	LD	(SM.WINE),HL
	RET

E2.KOMZ2:
	INC	BC
	LDIR
	RET

E2.KOMZ3:
	LDIR
	DEC	HL
	RET

E2.POSI0:
	LD	A,(SM.TABZ)
E2.POSIT:
	LD	(SM.SPOS),A
	EX	DE,HL
	CALL	SY.CPOS
	EX	DE,HL
	RET

E2.UML:
	CALL	E1.BIZA
	LD	A,E
	LD	(SM.BZA),A
	CALL	E1.BIL
E2.UMLT1:
	PUSH	HL
	POP	BC
E2.UMLT:
	LD	HL,SD.BWSA
	LD	DE,SD.BPA
	PUSH	DE
	CALL	E2.UMLBT	;Komprimieren
	POP	HL
	EX	DE,HL
	OR	A
	SBC	HL,DE
	PUSH	HL	;HL=Laenge
	CALL	E2.UMLAD
	POP	BC
	LD	HL,SD.BPA
E2.UMLA:
	LD	DE,(SM.WINA)
	LD	A,B
	OR	C
	JR	Z,E2.UMLE
	LDIR
E2.UMLE:
	EX	DE,HL
	LD	(SM.WINE),HL
	RET

E2.UMLAD:
	LD	BC,(SM.WINA)	;HL=Laenge Text im BPUF
	ADD	HL,BC	;HL=WINE neu
	PUSH	HL
	LD	DE,(SM.WINE)
	OR	A
	SBC	HL,DE	;CY=1 falls WINE neu < alt
	POP	HL
	RET	Z
	PUSH	HL
	PUSH	AF
	LD	HL,(SM.END)
	SCF
	SBC	HL,DE
	INC	HL
	JR	NC,E2.UMLC	;HL=Laenge Q.Rest
	POP	AF
	POP	HL
	LD	(SM.END),HL
	RET
E2.UMLC:
	POP	AF
	PUSH	HL
	POP	BC	;BC=Laenge Q.Rest
	POP	HL	;HL=WINE neu
	JR	C,E2.UMLR
	ADD	HL,BC	;Luecke vergroessern
	EX	DE,HL	;DE=END neu
	LD	HL,(SM.END)
	LD	(SM.END),DE
	INC	BC
	LDDR
	RET
E2.UMLR:
	EX	DE,HL	;DE=WINE neu   HL= alt
	LDIR
	LD	(SM.END),DE
	RET

E2.UMLBT:
	LD	A,B
	OR	C
	RET	Z
	LD	A,(SM.FSTAT)
	CP	80H
	JR	Z,E2.UML1
E2.UMLF:
	PUSH	BC
	EX	(SP),HL	;HL=Laenge (SP)=Quelle
	LD	BC,(SM.SPANZ)
	LD	B,0
	CALL	S1.DIV	;A=Zeilenazahl  BC=Zeilenlaenge
	POP	HL	;HL=Quelle
E2.UMLF0:
	PUSH	AF
	PUSH	BC
	PUSH	HL
	LD	B,C
	CALL	SY.SZEI4	;Z=1 wenn nur space
	JR	Z,E2.UMLF1
	LD	BC,(SM.SMIN)
	LD	B,0
	DEC	C
	POP	HL
	PUSH	HL
	ADD	HL,BC
	PUSH	AF
	LD	A,(SM.SMAX)
	SUB	C
	LD	C,A
	POP	AF
	CALL	E2.UMLFR
E2.UMLF1:
	POP	HL
	POP	BC
	ADD	HL,BC
	POP	AF
	DEC	A
	JR	NZ,E2.UMLF0
	RET

E2.UMLF2:
	LD	A,SD.SPACE
	CPI
	RET	PO
	JR	Z,E2.UMLF2
	DEC	HL
	INC	BC
E2.UMLF3:
	LD	A,M
	LDI
	RET	PO
E2.UMLFR:
	CP	SD.NL
	JR	NZ,E2.UMLF3
	JR	E2.UMLF2

E2.UML1:
	LD	A,SD.SPACE	;Komprimieren
	CPI
	RET	PO
	JR	Z,E2.UML1
	DEC	HL
	INC	BC
	LD	A,M	;kein space
	CP	1EH	;NL ?  ;SD.NL ???
	JR	Z,E2.UML2
	CP	27H	;Literal ?
	JR	Z,E2.UML4
	CP	3BH	;Semikolon ?
	JR	Z,E2.UML5
E2.UML6:
	LDI		;Text uebertragen mit nachgestelltem SP
	RET	PO
	LD	A,SD.SPACE
	CP	M
	JR	NZ,E2.UML1
E2.UML2:
	LDI		;Text uebertragen ohne nachgestelltes SP
	RET	PO
	JR	E2.UML1
E2.UML4:
	LDI
	RET	PO
	LD	A,27H
	CP	M
	JR	NZ,E2.UML4
	JR	E2.UML6
E2.UML5:
	LDI
	RET	PO
	LD	A,1EH
	CP	M
	JR	NZ,E2.UML5
	JR	E2.UML2

			;Stand: 30.Januar 85 - K EAW/wfvm..MSH

;	END
	TITLE	'EDITOR --- Kommandointerpreter'
	PAGE
;	PN	E301
;****************************************************************
;*                  DEG2000 V.1.2   EDITOR --- Kommandointerpr. *
;*  Version         --------------------------------------------*
;*                  Programmierer: M. Herbote  K EAW  ZFT (WFT) *
;*  V 1 . 2         --------------------------------------------*
;*                  Stand        : 30.Januar 1985               *
;****************************************************************
E3.KOMAN:
	CP	'Z'	;(HL)=A=1.Kommandozeichen
	JP	Z,E3.ZET	;B=Zaehler
	CP	'T'
	JP	Z,E3.TAUS
	CP	'Y'
	JP	Z,E3.STAN
	CP	'X'
	JP	Z,E3.LESE
	CP	'M'
	JP	Z,E3.MOVE
	CP	'N'
	JP	Z,E3.NEUST
	CP	'P'
	JP	Z,E3.PTSL
	CP	'E'
	JR	NZ,E3.ERRO2
	CALL	E2.RESET
	JP	SY.SYSTB
E3.ERRO2:
	LD	C,2	;KOMMANDO FALSCH
E3.FEHL:
	CALL	SY.LCPOS
E3.FEHL1:
	JP	E3.ERRR

;Kommando       Statusbyte     Bedeutung
;  Z                1          fortlaufend  Blaettern
;  Z n              2          ab Zeile  n  Blaettern
;  Z '...'          4          ab naechster Zeichenkette
;  Z +n             8          ab Zeilenstand  +n
;  Z +              8          ''      ''      +1
;  Z*....       wie oben       wie oben ab Zeile 1 beginnend
;  T '..' '..'   ''  ''+10H    Tausch von Zeichenketten
;  Y ....        ''  ''  ''    Stanzen
;  M ....        ''  ''  ''    Verschieben


E3.ZET:
	EX	DE,HL
	LD	HL,SM.STAT	;DE=Anfang Rest Kommando
	LD	M,1
	CALL	S1.SUZEI
	RET	Z
	CP	'*'
	JR	NZ,E3.Z1
	CALL	E2.RESET
	XOR	A
	LD	(SM.BZA),A
	CALL	S1.SUZEI
	RET	Z		;Blaettern ab #
E3.Z1:
	CALL	S1.IDH
	JR	C,E3.Z4
	JR	Z,E3.ERRO3
E3.ZET1:
	LD	A,2
	LD	(SM.STAT),A
E3.Z3:
	LD	(SM.ZEIZ),HL
	RET
E3.Z4:
	CP	'+'
	JR	NZ,E3.ZEIK
	LD	A,8
	LD	(SM.STAT),A
	LD	HL,1
E3.PL3:
	CALL	S1.SUZA
	JR	C,E3.ERRO3
	LD	(SM.WEITE),HL
	RET

E3.ERR3A:
	POP	AF
E3.ERRO3:
	LD	C,3	;falsche Zahleneingabe
	EX	DE,HL
	JP	E3.FEHL

E3.ZEIK:
	LD	HL,SM.STAT
	LD	M,4
	PUSH	DE
	POP	HL
E3.ZEIKA:
	CALL	S1.KETTE
	JR	C,E3.ERRO4
	JR	Z,E3.ERRO4
E3.ZEIKC:
	LD	HL,SM.LZA
E3.ZEIKB:
	EX	DE,HL
	LD	(DE),A
	INC	DE
	INC	HL
	LD	B,0
	LD	C,A
	LDIR
	RET

E3.ERRO4:
	LD	C,4	;falsch eingegebene Zeichenkette
	JP	E3.FEHL1

E3.TAUS:
	CALL	SY.SZEI2
	RET	Z
	PUSH	HL
	POP	DE
	CALL	S1.KETTE
	JR	C,E3.ERRO4
	JR	Z,E3.ERRO4
	PUSH	BC
	CALL	E3.ZEIKC
	POP	BC
	CALL	SY.SZEI2
	JR	Z,E3.TAU3
	PUSH	HL
	POP	DE
	CALL	S1.KETTE
	JR	C,E3.ERRO4
E3.TAU3:
	LD	HL,SM.LZN
	LD	M,0
	JR	Z,E3.TAU6
	LD	M,A
	INC	DE
	LD	(SM.ZKN),DE
E3.TAU6:
	CALL	E2.QLANG
E3.TAU4:
	CALL	NC,E2.SUCH
	JR	C,E3.ERRO7
	JR	NZ,E3.TAU4
E3.TAU1:
	CALL	Z,E3.EXCH
	CALL	NC,E2.SUCH
	JR	NC,E3.TAU1
E3.TAU2:
	LD	HL,SM.STAT
	BIT	2,M
	JR	Z,E3.TAU5
	LD	M,1
E3.TAU5:
	SET	4,M
	RET

E3.ERRO7:
	LD	C,7	;Zeichenkette nicht vorhanden
	JP	E3.FEHL

E3.EXCH:
	DEC	HL
	LD	(SM.WINA),HL
	LD	BC,(SM.LZA)
	LD	B,0
	ADD	HL,BC
	LD	(SM.WINE),HL
	LD	HL,(SM.LZN)
	LD	H,B
	PUSH	HL
	CALL	E2.UMLAD
	POP	BC
	LD	HL,(SM.ZKN)
	CALL	E2.UMLA
	PUSH	HL
	POP	BC
	JP	E2.LANG1

E3.NEUST:
	CALL	E2.RESET
	LD	(SM.END),HL
E3.NEU1:
	CALL	E1.NUM
	LD	A,1
	LD	(SM.STAT),A
	LD	HL,(SM.ZMIN2)
	DEC	H
	DEC	L
	LD	(SM.ZPOS2),HL
	RET

E3.LESE:
	CALL	SY.SZEI2
	JR	Z,E3.LESE1
	CP	'*'
	JP	NZ,E3.ERRO2
	CALL	E3.NEUST
E3.LESE1:
	CALL	E2.ZNUMX	;HL=(END)
	PUSH	DE
	CALL	E4.LESER
	POP	HL
	INC	HL
	JP	E3.ZET1

E3.STAN:
	EX	DE,HL
E3.STAN2:
	CALL	S1.SUZA
	JR	NZ,E3.STAN1
	LD	DE,SD.TPA	;DE=Anfang
E3.STAN3:
	LD	HL,(SM.END)	;HL=Ende
E3.STAN6:
	DEC	HL
	CALL	E4.STANZ
	JR	E3.TAU2
E3.STAN1:
	JP	C,E3.ERRO3
	PUSH	BC
	PUSH	DE
	EX	DE,HL
	CALL	E2.QLANG
	JR	C,E3.ERR5C
	CALL	E2.ZNR1	;HL=Startadresse
	POP	DE	;DE=KOZEIposition
	POP	BC
	JP	PO,E3.ERR5B
E3.STAN5:
	PUSH	HL
	CALL	S1.SUZA
	JR	C,E3.STAN1
	POP	DE	;DE=Startadresse
	JR	Z,E3.STAN3
	PUSH	DE
	INC	HL
	EX	DE,HL
	CALL	E2.QLANG
	CALL	E2.ZNR1
	POP	DE
	JP	PO,E3.STAN3
	JR	E3.STAN6

E3.ERR5C:
	POP	DE
E3.ERR5B:
	EX	DE,HL
	LD	C,5	;Zeilennummer zu gross
	JP	E3.FEHL

E3.ERRO8:
	EX	DE,HL
	LD	C,8	;Zeilennummer zu klein
	JP	E3.FEHL

E3.MOVE2:
	CALL	S1.SUZA
	JP	C,E3.ERR3A
	RET	NZ
	LD	A,(SM.SMIN)
	DEC	A
	LD	(SM.SPOS),A
	POP	AF	;SP korrigieren
E3.ERR2A:
	EX	DE,HL
	JP	E3.ERRO2

E3.MOVE:
	EX	DE,HL
	CALL	E3.MOVE2
	LD	(SM.LZN-2),HL
	INC	HL
	LD	(SM.LZN-4),HL
	CALL	E3.MOVE4
	JR	Z,E3.ERR2A
	CP	'>'
	JR	Z,E3.MOVE1
	CALL	S1.SUZA1
	JP	C,E3.ERRO3
	INC	HL
	LD	(SM.LZN-4),HL
	PUSH	BC
	LD	BC,(SM.LZN-2)
	SBC	HL,BC
	POP	BC
	JR	C,E3.ERRO8
	CALL	E3.MOVE4
	JR	Z,E3.ERR2A
	CP	'>'
	JR	NZ,E3.ERR2A
E3.MOVE1:
	CALL	E3.MOVE2
	LD	(SM.LZN-6),HL
	LD	BC,(SM.LZN-4)
	LD	A,1
	LD	(SM.LZN-7),A
	SBC	HL,BC
	ADD	HL,BC
	JR	NC,E3.MOVE3
	LD	BC,(SM.LZN-2)
	XOR	A
	SBC	HL,BC
	JR	NC,E3.ERRO8
	LD	(SM.LZN-7),A
E3.MOVE3:
	PUSH	DE
	CALL	E2.QLANG
	JR	C,E3.ERR5C
	LD	DE,(SM.LZN-6)
	CALL	E2.ZNR1
	JP	PO,E3.ERR5C
	CALL	E2.SET	;WINA=WINE=Zielzeile
	CALL	E2.QLANG
	LD	DE,(SM.LZN-2)
	CALL	E2.ZNR1	;HL=Quellanfang
	JP	PO,E3.ERR5C
	EX	(SP),HL
	PUSH	HL
	CALL	E2.QLANG
	LD	DE,(SM.LZN-4)
	CALL	E2.ZNR1	;HL=Quellende
	POP	DE
	JP	PO,E3.ERR5B
	POP	BC
	PUSH	BC
	OR	A
	SBC	HL,BC	;HL=QE-QA
	PUSH	HL
	CALL	E2.UMLAD
	POP	BC
	POP	HL	;HL=QA
	LD	A,(SM.LZN-7)
	OR	A	;Z=1 fuer rueckwaerts
	JR	NZ,E3.MOVEV
	ADD	HL,BC
E3.MOVEV:
	PUSH	HL
	CALL	E2.UMLA
	POP	HL
	LD	(SM.WINA),HL
	LD	(SM.WINE),DE
	LD	HL,0
	CALL	E2.UMLAD
	JP	E3.TAU2
E3.MOVE4:
	CALL	S1.SUZEI
	RET	Z		;Z=1: Fehler
	CP	'-'
	JR	Z,E3.MOVE4
	RET
E3.PTSL:
	XOR	A
	EX	AF,AF'
	LD	IX,SD.RAM
	LD	(IX+0),SD.PSANZ
	EX	DE,HL
	CALL	S1.LT1Z
	JP	Z,E3.ERR2A
	JP	C,E3.ERRO3
	PUSH	BC
	PUSH	DE
	CALL	E1.PTSNR
	POP	DE
	JP	C,E3.ERR5B
	EXX
	LD	HL,(SM.END)
	LD	DE,(SM.WINA)
	LD	BC,(SM.WINE)
	EXX
	LD	(SM.WINA),HL
	JP	PO,E3.PTSL1
	CPIR
E3.PTSL1:
	DEC	HL
	LD	(SM.WINE),HL
	LD	HL,(SM.PTSE)
	LD	(SM.END),HL
	POP	BC
	CALL	S1.SUZEI
	JR	Z,E3.PTER4
	PUSH	DE
	POP	HL
	CALL	S1.KETTE
	JR	Z,E3.PTER4
	JR	C,E3.PTER4
	LD	HL,(SM.END)
	LD	BC,(SM.WINA)
	ADD	HL,BC
	LD	BC,(SM.WINE)
	OR	A
	SBC	HL,BC
	LD	B,0
	LD	C,A
	ADD	HL,BC
	LD	BC,0FFFFH
	OR	A
	SBC	HL,BC
	JR	NC,E3.PTER9	;END+WINA-WINE+L < 0FFFFH   ?
	LD	H,0	;                  RAM+400H ?
	LD	L,A
	INC	DE
	PUSH	HL
	PUSH	DE
	CALL	E2.UMLAD
	POP	HL
	POP	BC
	CALL	E2.UMLA
	LD	HL,(SM.END)
	LD	(SM.PTSE),HL
E3.PTEX:
	EXX
	LD	(SM.END),HL
	LD	(SM.WINA),DE
	LD	(SM.WINE),BC
	EXX
	RET
E3.PTER4:
	CALL	E3.PTEX
	JP	E3.ERRO4
E3.PTER9:
	CALL	E3.PTEX
	LD	C,9	;Speicherueberlauf
	JP	E3.FEHL1

E3.ERRR:
	LD	SP,SM.STACK-2
	LD	A,23
	LD	(SM.ZPOS),A
	CALL	S1.ERRO
	JP	ED.MEL11

			;Stand: 30.Januar 85 - K EAW/wfvm..MSH

;	END
	TITLE	'EDITOR --- Peripheriegeraete'
	PAGE
;	PN	E403
;****************************************************************
;*                  DEG2000  V. 1.2   EDITOR --- Peripherieger. *
;*  Version         --------------------------------------------*
;*                  Programmierer: M. Herbote  K EAW  ZFT (WFT) *
;*  V 1 . 2         --------------------------------------------*
;*                  Stand        : 04.Februar 1985              *
;****************************************************************
E4.LESER:
	PUSH	IX
	LD	IX,SM.EALBL
E4.LLQ0:
	CALL	LR.LRLBL
	BIT	0,(IX+3)
	JR	NZ,E4.FERTL
	CP	00AH
	JR	Z,E4.LLQ2
	CP	00DH
	JR	Z,E4.LLQ2
	CP	SD.TAB	;Tabulator
	JR	NZ,E4.LLQ6
	LD	M,SD.SPACE
	CALL	E2.RUFTF
	LD	A,SD.TAB
	JR	NZ,E4.LLQ6
	INC	HL
E4.LLQ6:
	LD	M,A
	CP	M
	JR	NZ,E4.ERR13	;Schreibfehler
	INC	HL
	PUSH	HL
	PUSH	DE
	EX	DE,HL
	LD	HL,(SM.PTS)
	OR	A
	SBC	HL,DE
	LD	DE,2500
	OR	A
	SBC	HL,DE
	POP	DE
	POP	HL
	JR	Z,E4.FERTL	;(SM.PTS)-2500 = akt. Zeiger
	JR	C,E4.FERTL	;(SM.PTS)-2500 < akt. Zeiger
	JR	E4.LLQ0

E4.LLQ2:
	LD	A,1EH
	DEC	HL
	CP	M
	INC	HL
	JR	Z,E4.LLQ0
	JR	E4.LLQ6

E4.ERR13:
	LD	C,13	;Schreibfehler
E4.ERR0:
	PUSH	HL
	CALL	S1.ERRO
	POP	HL
E4.FERTL:
	LD	(SM.END),HL
	POP	IX
	RET


E4.STANZ:
	PUSH	IX	;(DE)=1.-, (HL)=letztes Zeichen
	LD	IX,SM.EALBS
E4.LSQ1:
	LD	A,(DE)
	LD	C,A
	CALL	LR.LRLBS
	OR	A
	SBC	HL,DE
	ADD	HL,DE
	INC	DE
	JR	NZ,E4.LSQ1
	POP	IX
	RET


E4.LEER:
	PUSH	IX
	LD	IX,SM.EALBS
	LD	A,(IX+4)
	PUSH	AF
	LD	(IX+4),00000010B
	PUSH	BC
	LD	BC,08000H	;Ausgabe von 80H mal Zeichen "00H"
	CALL	LR.LRLBS
	DJNZ	$-3
E4.LEER1:
	POP	BC
	POP	AF
	LD	(IX+4),A
	POP	IX
	RET

E4.STEND:
	PUSH	IX	;Ausgabe des LB-Endezeichens  EOF
	LD	IX,SM.EALBS
	LD	A,(IX+4)
	PUSH	AF
	LD	(IX+4),00000010B
	PUSH	BC
	LD	C,(IX+12)
	CALL	LR.LRLBS
	JR	E4.LEER1

	PAGE
;****************************************************************
;*                  Eintragungen in die E/A-Tabellen            *
;****************************************************************
	DW	$
	DB	'ISO '
	LD	IY,SM.EALBL	;E/A-Tabelle   L B L
	LD	HL,0
	EXX
	LD	B,11100110B	;Kommando
	LD	C,07FH	;Parity
	LD	DE,01E1EH	;EOR - Zeichen
	LD	A,019H	;EOF - Zeichen
	LD	HL,0
	CALL	E4.TAB
	EXX
	LD	IY,SM.EALBS	;E/A-Tabelle   L B S
	LD	B,11000100B	;Kommando
	LD	C,080H	;Parity
E4.ISO:
	CALL	E4.TAB
	JP	SY.SYSTB


	DW	$
	DB	'ANW '
	LD	IY,SM.EALBL	;E/A-Tabelle   L B L
	LD	HL,LR.KONV
	EXX
	LD	B,10101110B	;Kommando
	LD	C,0EFH	;Parity
	LD	DE,0801EH	;EOR - Zeichen
	LD	A,081H	;EOF - Zeichen
	LD	HL,LR.SKTBI
	CALL	E4.TAB
	EXX
	LD	IY,SM.EALBS	;E/A-Tabelle   L B S
	LD	B,10101100B	;Kommando
	LD	C,010H	;Parity
	LD	HL,LR.SKTBO
	JR	E4.ISO

E4.TAB:
	LD	(IY+0),D
	LD	(IY+1),E
	LD	(IY+4),B
	LD	(IY+11),C
	LD	(IY+12),A
	LD	(IY+5),L
	LD	(IY+6),H
	EXX
	LD	(IY+19),L
	LD	(IY+20),H
	RET

	PAGE
;****************************************************************
;*                  Kommandos:  V O R _ , E O F _ , M B _ _     *
;****************************************************************
	DW	$
	DB	'VOR '
	CALL	E4.LEER
	JP	SY.SYSTB


	DW	$
	DB	'EOF '
	CALL	E4.STEND
	CALL	E4.LEER
	JP	SY.SYSTB


	DW	$
	DB	'MB  '
E4.MBIF:
	PUSH	BC
	PUSH	IX
	OUT	(SD.AMB),A	;Aktivierung der  A M B
	LD	BC,255
E4.MBIF1:
	DEC	BC	;Warteschleife ca. 1.27 ms
	LD	A,B
	OR	C
	JR	NZ,E4.MBIF1
	LD	IX,SM.EAAMB
E4.MBIF2:
	BIT	0,(IX+0)	;MB-Geraet 1 bzw. 2 ?
	JR	NZ,E4.MBIF3
	BIT	1,(IX+7)	;MB-Geraet 1  besetzt ?
	JR	E4.MBIF4
E4.MBIF3:
	BIT	1,(IX+8)	;MB-Geraet 2  besetzt ?
E4.MBIF4:
	JR	NZ,E4.MBIF2
	POP	IX
	POP	BC
	RET

			;Stand: 04.Februar 85 - K EAW/wfvm..MSH

;	END

