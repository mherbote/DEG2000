	TITLE	'EDITOR --- Textaufruf'
	PAGE
;	PN	E201
;****************************************************************
;*                  DEG2000  V. 1.2   EDITOR --- Textaufruf     *
;*  Version         --------------------------------------------*
;*                  Programmierer: M. Herbote  K EAW  ZFT (WFT) *
;*  V 1 . 2         --------------------------------------------*
;*                  Stand        : 30.Januar 1985               *
;****************************************************************
E2.TEXV:
	LD	HL,SM.STAT
	SET	7,M
	JR	E2.TEXS
E2.TEXR:
	LD	HL,SM.STAT
	RES	7,M
E2.TEXS:
	LD	A,1
	LD	(SM.ZSMER),A
E2.TEXL:
	CALL	E2.UML
	CALL	E1.LOEBP
	LD	DE,(SM.END)
	LD	HL,(SM.PTS)
	OR	A
	SBC	A,HL,DE
	JR	C,E2.ERR99
	LD	DE,5000
	SBC	A,HL,DE
	CALL	C,E2.TEXW
E2.TEX:
	CALL	E2.QLANG
	RET	C
	CALL	E2.TEXV1
	PUSH	HL
	POP	BC	;BC=WINE
	CALL	E2.LANG1
	CALL	NC,E2.SET
	CALL	C,E2.RESET
	CALL	SY.CPOS
	PUSH	HL
	XOR	A
	LD	(SM.ZPOS),A
E2.TEXV3:
	LD	BC,(SM.WINE)
	CALL	E2.LANG1
	JR	C,E2.TEXV2
	CALL	E2.RUFT	;Zeilenaufruf
	LD	HL,SM.ZPOS
	INC	M
	LD	A,(SM.ZMAX)
	DEC	A
	CP	M
	JR	NC,E2.TEXV3
E2.TEXV2:
	POP	HL
	CALL	SY.LCPOS	;Cursor einsetzen
	CALL	E1.ZNUM
	RET

E2.TEXW:
	ADD	HL,DE	;Warnung Speicher voll
	LD	DE,S1.ZS13
	LD	A,(SM.ZANZ)
	LD	BC,-22
	JP	S1.MELDE

E2.RESET:
	LD	HL,1
	LD	(SM.ZEIZ),HL
	LD	HL,SD.TPA
E2.SET:
	LD	(SM.WINA),HL
	LD	(SM.WINE),HL
	RET

E2.ERR99:
	LD	C,99	;Speicherueberlauf
	JR	E2.ERR5A
E2.ERR7A:
	LD	C,7	;Zeichenkette nicht vorhanden
	JR	E2.ERR5A
E2.ERRO5:
	LD	C,5	;Zeilennummer zu gross
E2.ERR5A:
	JP	E3.ERRR

E2.TEX0:
	PUSH	HL
	LD	HL,SM.STAT
	RES	4,M
	LD	HL,(SM.ZEIZ)
	LD	DE,(SM.BZA)
	LD	D,0
	ADD	HL,DE
	JR	E2.ZNR2

E2.TEXV1:
	LD	A,(SM.STAT)	;pruefen Statusbits
	BIT	4,A
	JR	NZ,E2.TEX0
	BIT	3,A
	JR	NZ,E2.NZEI
	BIT	2,A
	JP	NZ,E2.MRK
	BIT	1,A
	JR	NZ,E2.ZNR
	BIT	7,A
	JR	Z,E2.SPR
	LD	HL,(SM.WINE)
	PUSH	HL
	LD	BC,(SM.WINA)
	CALL	E2.LANG
	CALL	E2.ZNX2
	LD	HL,(SM.ZEIZ)
	ADD	HL,DE
	LD	(SM.ZEIZ),HL
	POP	HL
	RET

E2.SPR:
	LD	DE,(SM.ZMAX)
	LD	D,0
	JR	E2.NZEI8

E2.ZNR:
	LD	A,1
	LD	(SM.STAT),A
	PUSH	HL
	LD	HL,(SM.ZEIZ)
E2.ZNR2:
	CALL	E2.NKORR
	EX	DE,HL
	POP	HL
	CALL	E2.ZNR1
	JP	PO,E2.ERRO5
	RET

E2.ZNR1:
	DEC	DE	;BC=Textlaenge
E2.ZNR0:
	LD	A,D	;HL=Textanfang
	OR	E
	RET	Z
	LD	A,1EH
	CPIR
	RET	PO
	JR	E2.ZNR1	;HL=WINE neu

E2.NZEI:
	LD	DE,(SM.WEITE)	;+/- n Zeilen
E2.NZEI8:
	LD	BC,(SM.ZEIZ)
	LD	HL,(SM.BZA)
	LD	H,0
	ADD	HL,BC
	BIT	7,A
	JR	NZ,E2.NZEIV
	SCF
	SBC	A,HL,DE
	INC	HL
	JR	NC,E2.NZEIR
	EX	DE,HL
E2.NZEI7:
	PUSH	DE
	CALL	E2.ZNUMX
	POP	HL
	ADD	HL,DE	;HL<=0!
	LD	(SM.ZEIZ),HL
	EX	DE,HL
E2.NZEI6:
	CALL	E2.QLANG
	CALL	E2.ZNR1
	RET

E2.NZEIV:
	ADD	HL,DE
	PUSH	HL
	PUSH	BC
	CALL	E2.ZNUMX
	POP	BC
	POP	HL
	OR	A
	SBC	A,HL,DE
	JP	NC,E2.RESET
	ADD	HL,DE
E2.NZEIR:
	CALL	E2.NKORR
	OR	A
	SBC	A,HL,BC
	EX	DE,HL	;DE=Weite
	LD	HL,(SM.WINA)
	RET	Z
	JR	C,E2.NZEI4
	PUSH	HL
	POP	BC
	CALL	E2.LANG1
	RET	C
	CALL	E2.ZNR0
	RET

E2.NZEI4:
	LD	BC,SD.TPA
	CALL	E2.LANG
	JR	C,E2.NZEI7
	ADD	HL,BC
	DEC	HL
	INC	BC
E2.NZEI1:
	LD	A,1EH
	CPDR
	JR	NZ,E2.NZEI3
	LD	A,D
	OR	E
	INC	DE
	JR	NZ,E2.NZEI1
E2.NZEI3:
	INC	HL
	INC	HL
	RET

E2.NKORR:
	LD	DE,(SM.ZPOS)
	LD	D,0
	SCF
	SBC	A,HL,DE
	INC	HL
	JR	NC,E2.NKOR1
	ADD	HL,DE
	LD	A,L
	DEC	A
	LD	(SM.ZPOS),A
	LD	HL,1
E2.NKOR1:
	LD	(SM.ZEIZ),HL
	RET

E2.QLANG:
	LD	BC,SD.TPA
E2.LANG1:
	LD	HL,(SM.END)
E2.LANG:
	SCF		;HL=Q.Ende  BC=Q.Anfang
	SBC	A,HL,BC
	INC	HL
	PUSH	BC
	EX	(SP),HL
	POP	BC	;BC=Q.Laenge   HL=Q.Anfang
	RET		;CY=1 falls BC<=0

E2.SUCH:
	LD	DE,SM.ZKA
	LD	A,(DE)
	CPIR
	SCF
	RET	PO
	PUSH	HL
	DEC	HL
E2.SUCH1:
	PUSH	BC
	LD	A,(SM.LZA)
	LD	B,A
	CALL	SY.VERGL
	SCF
	CCF
	POP	BC
	POP	HL	;CY=1 Fehler
	RET		;CY=0 Z=1 falls Zeichenkette gefunden

E2.SUCHR:
	LD	DE,SM.ZKA
	LD	A,(DE)
	CPDR
	SCF
	RET	PO
	PUSH	HL
	INC	HL
	JR	E2.SUCH1

E2.MARKR:
	CALL	E2.LANG1
	JR	C,E2.MRKR1
	LD	DE,(SM.BZA)
	LD	D,0
	CALL	E2.ZNR0
E2.MRKR1:
	LD	BC,SD.TPA
	CALL	E2.LANG
	JR	C,E2.MRKR4
	ADD	HL,BC
	DEC	HL
	INC	BC
E2.MRKR3:
	CALL	E2.SUCHR
	JR	C,E2.MRKR4
	JR	NZ,E2.MRKR3
	INC	HL
	JR	E2.MRK2
E2.MRKR4:
	CALL	E2.QLANG
	ADD	HL,BC
	DEC	HL
	INC	BC
E2.MRKR2:
	CALL	E2.SUCHR
	JP	C,E2.ERR7A
	JR	NZ,E2.MRKR2
	INC	HL
	JR	E2.MRK2

E2.MRK:
	LD	BC,(SM.WINA)
	BIT	7,A
	JR	Z,E2.MARKR
	CALL	E2.LANG1
	JR	C,E2.MRK4
	LD	DE,(SM.BZA)
	LD	D,0
	INC	E
	CALL	E2.ZNR0
	JP	PO,E2.MRK4
E2.MRK3:
	CALL	E2.SUCH
	JR	C,E2.MRK4
	JR	NZ,E2.MRK3
	DEC	HL
	JR	E2.MRK2
E2.MRK4:
	CALL	E2.QLANG
E2.MRK1:
	CALL	E2.SUCH
	JP	C,E2.ERR7A
	JR	NZ,E2.MRK1
	DEC	HL
E2.MRK2:
	LD	BC,SD.TPA
	INC	HL
	CALL	E2.LANG
	PUSH	HL
	PUSH	BC
	CALL	E2.ZNX2
	EX	DE,HL
	CALL	E2.NKORR
	EX	DE,HL
	POP	BC
	POP	HL
	CALL	E2.ZNR1
	RET

E2.ZNUMX:
	CALL	E2.QLANG
E2.ZNX2:
	LD	A,1EH
	LD	DE,0
	RET	C
E2.ZNX1:
	INC	DE
	CPIR
	RET	PO		;DE=Zeilenanzahl, HL=(END)
	JR	E2.ZNX1

;TEXTAUFRUF AUS TEXTPUFFER

E2.RUFTF:
	LD	A,(SM.FSTAT)
	CP	80H
	RET

E2.RUFT:
	LD	A,(SM.SMIN)	;HL=WINE  BC=Laenge
	DEC	A
	LD	(SM.SPOS),A
	CALL	S1.SPOSN
	INC	B
	DEC	B
	JR	NZ,E2.RUF5
	CP	C
	JR	C,E2.RUF5
	LD	A,C
E2.RUF5:
	LD	C,A
	LD	B,0
	PUSH	HL
	LD	A,SD.NL
	LD	E,C
	CPIR
	JR	Z,E2.RUF3
	DEC	HL
	LD	C,E
	CALL	E2.RUFTF
	JR	Z,E2.RUFQ2
	LD	A,SD.SPACE
	CPDR
	JR	Z,E2.RUF2
	LD	C,E
	DEC	C
	JR	NZ,$+3
	INC	C
	POP	HL
	CALL	E2.RUF1
	LD	A,SD.NL
	LD	(DE),A
	RET
E2.RUF2:
	JP	PO,E2.RUF6
	CPD
	JR	Z,E2.RUF2
	INC	HL
	INC	BC
E2.RUF6:
	INC	HL
	LD	M,SD.NL
	INC	BC
	POP	HL
	JR	E2.RUF1

E2.RUF3:
	LD	A,E
	SUB	C
	LD	C,A
	POP	HL
	CALL	E2.RUFTF
	JR	Z,E2.RUFQ
E2.RUF1:
	EX	DE,HL
	CALL	SY.CPOS
	EX	DE,HL
E2.RUF4:
	LDIR
	LD	(SM.WINE),HL
	RET

E2.RUFQ4:
	INC	DE
E2.RUFQ3:
	CALL	SY.CPOS
	LD	B,3
E2.RUFQ5:
	LD	M,'#'
	INC	HL
	DJNZ	E2.RUFQ5
	INC	HL
	CALL	S1.SPOSN
	SUB	5
	CP	C
	JR	NC,$+3
	LD	C,A
	EX	DE,HL
	CALL	E2.KOMZ3
	LD	M,'#'
	JP	E2.KOMZ4

E2.RUFQ1:
	CALL	SY.CPOS
	EX	DE,HL
	INC	C
	JP	E2.KOMTR

E2.RUFQ2:
	POP	DE
	LD	A,(DE)
	CP	3BH
	JR	Z,E2.RUFQ1
	CP	'#'
	JR	Z,E2.RUFQ4
	LD	A,3BH
	PUSH	BC
	CPDR
	POP	BC
	JR	NZ,E2.RUFQ3
	EX	DE,HL

E2.RUFQ:
	LD	B,C	;Quellkodeaufruf und Sortieren
	CALL	SY.SZEI4
	JR	Z,E2.OP1
	LD	C,B
	LD	B,0
	CP	'#'
	JP	Z,E2.RUF1
	CP	3BH
	JP	Z,E2.RUF1
	PUSH	HL
	LD	A,3BH
	LD	E,C
	CPIR		;allgemeiner Kommentar ?
	CALL	Z,E2.KOM
	POP	HL	;Marke ?
	PUSH	HL
	LD	C,E
	LD	A,':'	;Doppelpunkt-Suche
	CPIR
	POP	HL
	JR	NZ,E2.OPCO	;Sprung, falls keine Marke
E2.MARK:
	LD	A,E
	SUB	C	;Markenlaenge einstellen
	LD	C,A
	PUSH	HL
	PUSH	BC
	LD	A,27H	;Literalsuche
	CPIR
	POP	BC
	POP	HL
	JR	Z,E2.OPCO	;keine Marke falls Literal
	CALL	E2.POSI0
	LDIR
	CALL	SY.SZEI4
E2.OPCO:
	LD	A,(SM.TABZ+1)
	CALL	E2.POSIT
E2.OP2:
	LD	A,M
	CP	SD.SPACE
	JR	Z,E2.OPRD
	LDI
	CP	SD.NL
	JR	NZ,E2.OP2
E2.OP1:
	LD	(SM.WINE),HL
	RET

E2.OPRD:
	LD	A,(SM.TABZ+2)
	CALL	E2.POSIT
	CALL	SY.SZEI2
E2.OP3:
	CP	3BH	;Semikolon
	RET	Z
	LDI
	CP	SD.NL
	JR	Z,E2.OP1
	CP	27H
	LD	A,M
	JR	NZ,E2.OP3
E2.OP4:
	LDI
	CP	27H
	LD	A,M
	JR	Z,E2.OP3
	JR	E2.OP4

E2.KOM:
	PUSH	HL
	PUSH	BC
	LD	A,E
	SUB	C
	LD	C,A
	LD	A,27H
	DEC	HL
	CPDR
	JR	NZ,E2.KOM3
	CPDR
	JR	Z,E2.KOM3
	POP	BC
	POP	HL
	LD	A,3BH
	CPIR
	RET	NZ
E2.KOM3:
	POP	BC
	POP	HL
	LD	A,E
	SUB	C
	LD	E,A
	PUSH	DE
	INC	BC
	DEC	HL
	LD	A,(SM.TABZ+3)
	CALL	E2.POSIT
	CALL	E2.KOMTR
	POP	DE
	RET

E2.KOMTR:
	CALL	S1.SPOSN
	SUB	C
	JP	NC,E2.RUF4
	ADD	A,C
	DEC	A
	LD	C,A
	PUSH	BC
	PUSH	HL
	ADD	HL,BC
	LD	A,SD.SPACE
	CPDR
	POP	HL
	CALL	Z,E2.KOMZ2
	POP	BC
	CALL	NZ,E2.KOMZ3
	LD	M,3BH
E2.KOMZ4:
	LD	A,SD.NL
	LD	(DE),A
	LD	(SM.WINE),HL
	RET

E2.KOMZ2:
	INC	BC
	LDIR
	RET

E2.KOMZ3:
	LDIR
	DEC	HL
	RET

E2.POSI0:
	LD	A,(SM.TABZ)
E2.POSIT:
	LD	(SM.SPOS),A
	EX	DE,HL
	CALL	SY.CPOS
	EX	DE,HL
	RET

E2.UML:
	CALL	E1.BIZA
	LD	A,E
	LD	(SM.BZA),A
	CALL	E1.BIL
E2.UMLT1:
	PUSH	HL
	POP	BC
E2.UMLT:
	LD	HL,SD.BWSA
	LD	DE,SD.BPA
	PUSH	DE
	CALL	E2.UMLBT	;Komprimieren
	POP	HL
	EX	DE,HL
	OR	A
	SBC	A,HL,DE
	PUSH	HL	;HL=Laenge
	CALL	E2.UMLAD
	POP	BC
	LD	HL,SD.BPA
E2.UMLA:
	LD	DE,(SM.WINA)
	LD	A,B
	OR	C
	JR	Z,E2.UMLE
	LDIR
E2.UMLE:
	EX	DE,HL
	LD	(SM.WINE),HL
	RET

E2.UMLAD:
	LD	BC,(SM.WINA)	;HL=Laenge Text im BPUF
	ADD	HL,BC	;HL=WINE neu
	PUSH	HL
	LD	DE,(SM.WINE)
	OR	A
	SBC	A,HL,DE	;CY=1 falls WINE neu < alt
	POP	HL
	RET	Z
	PUSH	HL
	PUSH	AF
	LD	HL,(SM.END)
	SCF
	SBC	A,HL,DE
	INC	HL
	JR	NC,E2.UMLC	;HL=Laenge Q.Rest
	POP	AF
	POP	HL
	LD	(SM.END),HL
	RET
E2.UMLC:
	POP	AF
	PUSH	HL
	POP	BC	;BC=Laenge Q.Rest
	POP	HL	;HL=WINE neu
	JR	C,E2.UMLR
	ADD	HL,BC	;Luecke vergroessern
	EX	DE,HL	;DE=END neu
	LD	HL,(SM.END)
	LD	(SM.END),DE
	INC	BC
	LDDR
	RET
E2.UMLR:
	EX	DE,HL	;DE=WINE neu   HL= alt
	LDIR
	LD	(SM.END),DE
	RET

E2.UMLBT:
	LD	A,B
	OR	C
	RET	Z
	LD	A,(SM.FSTAT)
	CP	80H
	JR	Z,E2.UML1
E2.UMLF:
	PUSH	BC
	EX	(SP),HL	;HL=Laenge (SP)=Quelle
	LD	BC,(SM.SPANZ)
	LD	B,0
	CALL	S1.DIV	;A=Zeilenazahl  BC=Zeilenlaenge
	POP	HL	;HL=Quelle
E2.UMLF0:
	PUSH	AF
	PUSH	BC
	PUSH	HL
	LD	B,C
	CALL	SY.SZEI4	;Z=1 wenn nur space
	JR	Z,E2.UMLF1
	LD	BC,(SM.SMIN)
	LD	B,0
	DEC	C
	POP	HL
	PUSH	HL
	ADD	HL,BC
	PUSH	AF
	LD	A,(SM.SMAX)
	SUB	C
	LD	C,A
	POP	AF
	CALL	E2.UMLFR
E2.UMLF1:
	POP	HL
	POP	BC
	ADD	HL,BC
	POP	AF
	DEC	A
	JR	NZ,E2.UMLF0
	RET

E2.UMLF2:
	LD	A,SD.SPACE
	CPI
	RPO
	JR	Z,E2.UMLF2
	DEC	HL
	INC	BC
E2.UMLF3:
	LD	A,M
	LDI
	RPO
E2.UMLFR:
	CP	SD.NL
	JR	NZ,E2.UMLF3
	JR	E2.UMLF2

E2.UML1:
	LD	A,SD.SPACE	;Komprimieren
	CPI
	RPO
	JR	Z,E2.UML1
	DEC	HL
	INC	BC
	LD	A,M	;kein space
	CP	1EH	;NL ?
	JR	Z,E2.UML2
	CP	27H	;Literal ?
	JR	Z,E2.UML4
	CP	3BH	;Semikolon ?
	JR	Z,E2.UML5
E2.UML6:
	LDI		;Text uebertragen mit nachgestelltem SP
	RPO
	LD	A,SD.SPACE
	CP	M
	JR	NZ,E2.UML1
E2.UML2:
	LDI		;Text uebertragen ohne nachgestelltes SP
	RPO
	JR	E2.UML1
E2.UML4:
	LDI
	RPO
	LD	A,27H
	CP	M
	JR	NZ,E2.UML4
	JR	E2.UML6
E2.UML5:
	LDI
	RET	PO
	LD	A,1EH
	CP	M
	JR	NZ,E2.UML5
	JR	E2.UML2

			;Stand: 30.Januar 85 - K EAW/wfvm..MSH

;	END
