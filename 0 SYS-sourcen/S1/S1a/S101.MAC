	TITLE	'Systemroutinen  DEG 2000    Version 1.2'
	PAGE
;	PN	S101
;****************************************************************
;*                  Systemroutinen  DEG2000    Version 1.2      *
;*  Version         --------------------------------------------*
;*                  Programmierer: M. Herbote  K EAW  ZFT (WFT) *
;*  V 1 . 2         --------------------------------------------*
;*                  Stand        : 30.Januar 1985               *
;****************************************************************
	DW	$
	DB	'BILD'

	LD	DE,SD.BWSA + 10*80 + 7	;327H
	CALL	UC.CVDB
	RET	C
	XOR	A
	CP	H
	RET	NZ
	LD	A,16
	CP	L
	RET	C
	LD	B,L
	PUSH	BC
	LD	HL,SD.TPA
	PUSH	HL
	LD	DE,SD.TPA+1
	LD	(HL),20H
	LD	BC,SD.TPE-SD.TPA-1
	LDIR
	POP	HL
	POP	BC
S1.BI1:
	PUSH	BC
	CALL	S1.STR
	LD	B,20
	LD	DE,78
S1.BI2:
	LD	(HL),7CH
	ADD	HL,DE
	LD	(HL),7CH
	INC	HL
	LD	(HL),1EH
	INC	HL
	DJNZ	S1.BI2
	CALL	S1.STR
	POP	BC
	DJNZ	S1.BI1
	LD	(SM.END),HL
	JP	SY.SYSTB

S1.STR:
	PUSH	HL
	POP	DE
	INC	DE
	LD	BC,79
	LD	(HL),2DH
	LDIR
	LD	(HL),1EH
	INC	HL
	RET

	PAGE
;****************************************************************
;*                  Hardcopy-Tastenfunktion Version 1.1         *
;****************************************************************
S1.COPG:
	PUSH	AF
	PUSH	BC
	PUSH	HL
	LD	B,22	;Anzahl der Zeilen
	LD	C,80	;Anzahl der Spalten
	LD	HL,SD.BWSA	;Bildschirmanfang
	CALL	S1.HCP
	LD	A,1EH
	CALL	P1.PRINT
	CALL	P1.PRINT
	POP	HL
	POP	BC
	POP	AF
	RET

S1.HCP:
	PUSH	AF
	PUSH	BC
	PUSH	DE
	PUSH	HL
	LD	DE,80
S1.M1:
	PUSH	BC
	PUSH	HL
	LD	B,C	;Spaltenanzahl

S1.M2:
	LD	A,(HL)
	CALL	S1.KODE
	CALL	P1.PRINT
	INC	HL
	DJNZ	S1.M2

	LD	A,1EH
	CALL	P1.PRINT
	POP	HL
	ADD	HL,DE
	POP	BC
	DJNZ	S1.M1

	POP	HL
	POP	DE
	POP	BC
	POP	AF
	RET

S1.KODE:
	RES	7,A
	CP	7FH
	JR	NZ,S1.KODE1
	LD	A,2EH
S1.KODE1:
	CP	20H
	RET	NC
	LD	A,20H
	RET

;	DEFS	8,0

	PAGE
;****************************************************************
;	ORG	00800H
			;
S1.STANL:
	CALL	S1.SPOSN
	CALL	SY.CPOS
	CALL	SY.DEL2	;RESTZEILE LOESCHEN
	CALL	SY.ZLPOF
	CALL	SY.SZAHL
	LD	B,A
	CALL	SY.SZEI4	;ZEICHEN SUCHEN
	RET		;A=ZEICH. SONST Z=0

;ZEILENLAENGE HINTER EINSCHLIESSLICH CPOS

S1.SPOSN:
	PUSH	BC
	LD	BC,(SM.SPOS)
	LD	A,(SM.SMAX)
	SUB	C
	POP	BC
	RET		;A=SPALTENZAHL DER RESTZEILE

;FORMATZEILENENDE

S1.ZENDF:
	CALL	SY.ZLPOS
S1.ENDF2:
	LD	DE,(SM.SMAX)
S1.ENDF1:
	LD	D,0
	DEC	E
	ADD	HL,DE	;HL=ADR.ZEILENENDE
	RET

;AUSTAUSCH FORMATMERKER <--> ZWEITMERKER

S1.FOEX:
	LD	HL,SM.ZPOS
	LD	DE,SM.ZPOS2
	LD	B,6
S1.FOEX1:
	LD	C,M
	LD	A,(DE)
	LD	M,A
	LD	A,C
	LD	(DE),A
	INC	HL
	INC	DE
	DJNZ	S1.FOEX1
	RET

;KONVERTIERUNG HEXA.WERT IN HL --> ISO.-DEZ.ZAHL AB (DE)

S1.HDI:
	LD	BC,10000
	CALL	S1.HDI1
	LD	BC,1000
	CALL	S1.HDI1
	LD	BC,100
	CALL	S1.HDI1
	LD	BC,10
	CALL	S1.HDI1
	LD	A,L
	OR	30H
	INC	DE
	LD	(DE),A
	RET
S1.HDI1:
	CALL	S1.DIV
	OR	30H
	CP	30H
	JR	NZ,S1.HDI3
	LD	B,A
	LD	A,(DE)
	CP	SD.SPACE
	JR	Z,S1.HDI3
	LD	A,B
S1.HDI3:
	INC	DE
	LD	(DE),A
	RET

;DIVISION HL/BC

S1.DIV:
	XOR	A
S1.DIV1:
	SBC	HL,BC
	INC	A
	JR	NC,S1.DIV1
	ADD	HL,BC
	DEC	A	;A:=HL/BC  HL:=REST
	RET

;KONVERTIERUNG ISO.-DEZ.-ZAHL AB (DE) --> HEXA.-WERT IN HL
;ZAHL <10000H

S1.IDH:
	LD	C,6
	CALL	S1.IDH1
	RET	C	;CY=1 FEHLER: KEINE ZAHL AB (DE)
	LD	H,0
S1.IDH2:
	LD	L,A
	INC	DE
	DEC	C
	RET	Z		;Z=1 FEHLER: STELLENZAHL >5
S1.IDH3:
	CALL	S1.IDH1
	JR	C,S1.IDHE	;CY=1 WENN ZAHL ZUENDE
	CALL	S1.MUL10
	JR	C,S1.IDHF	;CY=1 WENN ZAHL >FFFFH
	JP	S1.IDH41
S1.IDHF:
	XOR	A
	RET		;Z=1 FEHLER: ZAHL >FFFFH
S1.IDHE:
	LD	A,1
	OR	A
	RET		;Z=CY=0 KEIN FEHLER

S1.IDH1:
	LD	A,(DE)
	CALL	S1.SIEBD
	RET	C
	AND	0FH
	RET

;TEST: ISOZEICHEN = ZIFFER ?

S1.SIEBD:
	CP	'0'
	RET	C
	CP	3AH
	CCF
	RET		;CY=1 WENN A KEINE DEZ. ZIFFER

;MULTIPLIKATION HL*10

S1.MUL10:
	PUSH	DE
	PUSH	HL
	POP	DE
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,DE
	ADD	HL,HL
	POP	DE
	RET		;HL:=HL*10

;MELDUNGEN
;DE=AUSZUGEBENDE ZEICHENKETTE, HL=DEZIMAL AUSZUGEBENDE HEXA-
;ZAHL, A=ZEILENNUMMER, BC=DISTANZ VON ZEILENANFANG (AUCH
;NEGATIV ZUGELASSEN

S1.MELDN:
	DEC	A	;A=ZEILENNUMMER
S1.MELDE:
	PUSH	HL	;A=ZEILENNUMMER-1
	LD	HL,SD.BWSA
	ADD	HL,BC
	CALL	SY.AMSZ
	EX	DE,HL	;DE=BWSA+BC+ A*(SPANZ)
	CALL	SY.MELD	;HL=ZEICHENKETTE
	POP	HL	;HL=ZAHL
	JP	S1.HDI

;FEHLERMELDUNGEN

S1.ERROR:
	CALL	SY.LCPOS
S1.ERRO:
	LD	H,0
	LD	L,C
	LD	A,(SM.ZPOS)
	INC	A
	LD	BC,-11
	LD	DE,S1.ZS11
	JR	S1.MELDE

;ZEICHENKETTEN FUER MELDUNGEN

S1.ZS11:
	DB	LOW(S1.LZS11)
	DB	'ERROR'
S1.LZS11	EQU	$-S1.ZS11-1
S1.ZS12:
	DB	LOW(S1.LZS12)
	DB	'ZEILE'
S1.LZS12	EQU	$-S1.ZS12-1
S1.ZS13:
	DB	LOW(S1.LZS13)
	DB	'MEMORY RESERVE'
S1.LZS13	EQU	$-S1.ZS13-1

;ZEICHENKETTE LAENGE ERMITTELN

S1.KETTE:
	LD	C,B	;B=LAENGE SUCHBEREICH
	JR	S1.KET3
S1.KET1:
	INC	HL
	CP	M
	JR	Z,S1.KET2
S1.KET3:
	DJNZ	S1.KET1
	SCF
	RET		;CY=1=FEHLER
S1.KET2:
	LD	A,C
	DEC	A
	SUB	B	;A=LAENGE ZEICHENKETTE
	RET

;ZEICHEN SUCHEN  (DE),(DE+1),...=SUCHBEREICH, B=LAENGE

S1.SUZEI:
	EX	DE,HL
	CALL	SY.SZEI2
	EX	DE,HL	;A=ZEICHEN,DE=ADR.
	RET		;Z=1 WENN KEIN ZEICHEN

;ZAHL SUCHEN (DE),(DE+1),...=SUCHBEREICH, B=LAENGE

S1.SUZA:
	CALL	S1.SUZEI
	RET	Z		;Z=1: KEIN ZEICHEN
S1.SUZA1:
	CALL	S1.IDH
	RET	C	;Z=0 CY=1: FALSCHE ZAHL
	RET	NZ		;CY=Z=0: HL=ZAHL
S1.SUZA3:
	LD	A,1
	OR	A
	SCF
	RET		;Z=0 CY=1: FALSCHE ZAHL

;ZAHL LESEN U. PRUEFEN: A'< ZAHL =< (IX+0)
;FALLS BEDINGUNG ERFUELLT: L=ZAHL Z=CY=0
;FALLS KEINE ZEICHEN: Z=1
;FALLS FALSCHE ZAHL: CY=1

S1.LT1Z:
	CALL	S1.SUZA
	RET	C
	RET	Z
	LD	A,H
	OR	A
	JR	NZ,S1.SUZA3
	LD	A,(IX+0)
	CP	L
	RET	C
	EX	AF,AF'	;'
	CP	L
	CCF
	RET

S1.MX:
	JP	(IX)

S1.RNR:
	PUSH	HL	;RECHTSROTIEREN VOR (HL)
	POP	DE	;BC=ANZAHL
	LD	A,(DE)
	DEC	HL
	LDDR
	LD	(DE),A
	RET

S1.RNL:
	PUSH	HL	;LINKSROTIEREN HINTER (HL)
	POP	DE	;BC=ANZAHL
	LD	A,(DE)
	INC	HL
	LDIR
	LD	(DE),A
	RET

;UMSCHALTEN AUF KLEINBUCHSTABEN

S1.UMS:
	LD	HL,SM.UMERK
	LD	A,M
	XOR	20H
	LD	M,A
	RET

;INPTR --UNTERPROGRAMM BESTIMMT PARAMETER NACH BEFEHLSNAME
;D=PARAMETER BINAER
;SM.PARAM -- SM.PARAM + 3 = PARAMETER HEXA
;
S1.INPTR:
	LD	HL,SD.BWSA + 10*80 + 7	;327H
	LD	BC,4
	LD	DE,SM.PARAM
	LDIR
	CALL	SY.BILO
	LD	HL,SM.PARAM
	CALL	S1.HBKON
	LD	D,A
	RET
;
;HBKON -- HEXADEZIMAL BINAER KONVERTIERUNG
;         HL = ANFANGSADRESSE DES HEXAZEICHEN
;         A = BINAERZEICHEN
;
S1.HBKON:
	PUSH	BC
	LD	A,(HL)	;1.ZEICHEN
	LD	B,0
	CALL	S1.KON1
	RL	B
	RL	B
	RL	B
	RL	B
	INC	HL
	LD	A,(HL)
	CALL	S1.KON1
	LD	A,B
	POP	BC
	RET
;
S1.KON1:
	SUB	30H
	CP	10	;CHARACTER?
	JR	C,S1.ZAHL
	AND	0FH	;NO
	ADD	A,9
S1.ZAHL:
	OR	B
	LD	B,A
	RET
;
;BHKON -- KONVERTIERE 8 BIT VON REG. A IN ASCII HEXA AUF (HL)
;
S1.BHKON:
	PUSH	AF	;RETTE A
	RRA
	RRA
	RRA
	RRA
	CALL	S1.KON2	;KONVERTIERE HIGH ORDER 4 BITS
	POP	AF
	INC	HL
	CALL	S1.KON2	;KONVERTIERE LOW ORDER 4 BITS
	RET
;
S1.KON2:
	AND	0FH	;MASKE FUER LOW ORDER 4 BITS
	CP	10
	JR	C,S1.HB10
	ADD	A,7
S1.HB10:
	ADD	A,30H
	LD	(HL),A
	RET
;
S1.IDH41:
	ADD	A,L
	JP	NC,S1.IDH2
	INC	H
	JP	S1.IDH2

	PAGE
;****************************************************************
;*                  E X E C --- Starten eines Programmes        *
;****************************************************************
	DW	$
	DB	'EXEC'
	CALL	S1.INPTR
	INC	HL
	CALL	S1.HBKON
	LD	E,A
	LD	SP,SM.STACK
	LD	BC,SY.SYSTB
	PUSH	BC
	PUSH	DE
	RET
;****************************************************************

	DW	$
	DB	'DATE'
	LD	DE,SD.BWSA + 10*80 + 7	;327H
	LD	A,(DE)
	CP	20H
	JR	NZ,S1.DA1
;			;Kein Parameter, dann akt. Datum holen
	LD	HL,S1.STAB	;Date location
	LD	BC,003FEH	;actual Date ermitteln
	INIR
	JR	S1.DA2
;
S1.DA1:
	LD	HL,SM.DATUM
	PUSH	HL
	CALL	S1.EING
	POP	HL
	RET	C
;
S1.DA2:
	CALL	S1.ANZG
	JP	SY.SYSTB
;
S1.EING:
	LD	B,3
	LD	DE,SD.BWSA + 10*80 + 7	;327H
	LD	A,(DE)
	CP	20H
	RET	Z
S1.EIN1:
	PUSH	HL
	CALL	UC.CVDB
	JR	C,S1.RET
	XOR	A
	CP	H
	JR	NZ,S1.RET
	LD	A,L
	CP	100
	JR	NC,S1.RET
	POP	HL
	LD	(HL),A
	INC	HL
	INC	DE
	DJNZ	S1.EIN1
	XOR	A
	RET
S1.RET:
	POP	HL
	SCF
	RET

S1.ANZG:
	PUSH	HL
	CALL	S1.TEST
	CALL	C,S1.STAND
	POP	HL
	LD	DE,SD.BWSA + 2*80 + 24 ;0B8H
	LD	B,3
S1.ANZ1:
	PUSH	HL
	LD	L,(HL)
	LD	H,0
	CALL	UC.CVBD2
	LD	A,2EH
	LD	(DE),A
	INC	DE
	POP	HL
	INC	HL
	DJNZ	S1.ANZ1
	DEC	DE
	LD	A,20H
	LD	(DE),A
	RET

S1.TEST:
	XOR	A
	CP	(HL)
	JR	Z,S1.TE1
	LD	A,31
	CP	(HL)
	JR	C,S1.TE1
	INC	HL
	XOR	A
	CP	(HL)
	JR	Z,S1.TE1
	LD	A,12
	CP	(HL)
	JR	C,S1.TE1
	XOR	A
	RET
S1.TE1:
	SCF
	RET

S1.STAND:
	LD	HL,S1.STAB
	LD	DE,SM.DATUM
	LD	BC,3
	LDIR
	RET

S1.STAB:
	DB	15
	DB	2
	DB	85


	PAGE
;****************************************************************
;*                  Editorkommandos  'EDN'                      *
;****************************************************************
S1.EDN:
	DI
	XOR	A
	LD	HL,(SM.END)
	LD	DE,SD.TPA
	SBC	HL,DE
;	JP	C,SY.SYSTB
	RET	C

	LD	A,01CH
	LD	(SM.NUTZK),A

	PUSH	DE
	LD	HL,(SM.PTS)
	LD	BC,03FFH	;0400H loescht sonst 0000H ein Byte
	PUSH	HL
	PUSH	BC
	LD	DE,(SM.PTS)
	INC	DE
	LD	(HL),0
	LDIR
	POP	BC
	POP	DE
	POP	HL

S1.ED1:
	LD	A,03AH
	CP	(HL)
	INC	HL
	JR	Z,S1.ED11
	CALL	S1.ETEST
	JR	S1.ED1

S1.ED11:
	INC	HL
	CALL	S1.ETEST
S1.ED2:
	XOR	A
	CP	(HL)
	JR	Z,S1.ED3
S1.ED6:
	LDI
	JP	PO,S1.ED4
	CALL	S1.ETEST
	OR	A
	JR	NZ,S1.ED1
	JR	S1.ED2

S1.ED3:
	LD	A,(SM.NUTZK)
	DEC	A
	LD	(SM.NUTZK),A
	JR	NZ,S1.ED6
	JR	S1.ED5
S1.ED4:
	LD	A,(SM.NUTZK)
	LD	B,A
	XOR	A
S1.ED7:
	DEC	DE
	LD	(DE),A
	DJNZ	S1.ED7
S1.ED5:
	LD	HL,(SM.PTS)
	LD	(SM.PTSA),HL
	LD	HL,0FFFFH
	LD	(SM.PTSE),HL
;	JP	ED.MEL1
	RET

S1.ETEST:
	PUSH	DE
	PUSH	HL
	OR	A
	LD	DE,(SM.END)
	SBC	HL,DE
	POP	HL
	POP	DE
	RET	C
	POP	HL
	JR	S1.ED5

			;Stand: 30.Januar 85 - K EAW/wfvm..MSH

;	END

