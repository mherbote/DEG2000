	TITLE	'Retten von Maschinencodeprogrammen als MRES - P-Datei'	PAGE;	PN	SV;**********************************************************************;;      Retten von Maschinencodeprogrammen als MRES - P-Datei;;**********************************************************************	DW	$	DB	'SAVE'	LD	A,(UE.BWSA+327H)	CALL	U1.TST	RET	C	CALL	U1.KTINI	LD	(IX+3),A	XOR	A	LD	(UB.PAR1+1),A	CALL	U1.BILO	;BS LOESCHEN	CALL	UR.KRE	BIT	2,(IX)	JR	Z,$+7	LD	A,19H	CALL	UF.ERANZ	CALL	UR.KRWWSV.SV20:	CALL	U1.DSVG	PUSH	BC	LD	A,C	LD	(UB.PAR1),A	;NEXT RECORD	LD	A,13	LD	(UB.ZN),ASV.DATN:	LD	HL,UA.ZKDAT	;Dateiname ?	CALL	UR.MIMO	RET	C	POP	BC	DEC	B	JR	Z,SV.SV30	;NEUE KASSETTESV.SV21:	CALL	UK.KBW	CALL	U1.NMVGL	JR	C,SV.DATV1	;Dateiname bereits vorhanden	DJNZ	SV.SV21	JR	SV.SV30SV.DATV1:	LD	A,01H	CP	B	CALL	Z,SV.DALO1	JR	Z,SV.SV37SV.DATVO:	LD	A,92H	CALL	UF.ERANZ	RETSV.SV30:	LD	A,'P'	LD	(UB.PAR2),A	CALL	U1.VZSSV.SV37:	LD	A,(UB.PAR1+1)	CP	'L'	JR	NZ,SV.SV31	LD	HL,UA.ZKDL	CALL	UR.MIMO	LD	A,(HL)	CP	'J'	JR	NZ,SV.DATVOSV.SV31:	LD	A,(UB.PAR1)	;NEXT RECORD	LD	B,A	PUSH	BC	INC	B	CALL	UR.POSIK	CALL	UK.KBW	LD	HL,UE.PUF	POP	BC	LD	A,(HL)	CP	B	JR	Z,SV.SAVE3	LD	A,94H	CALL	UF.ERANZ	RETSV.SAVE3:	LD	HL,UA.ZKBEG	;Beginn ?	CALL	UR.MIMO	JP	C,SV.DATN	CALL	U1.PRADR	JR	C,SV.SAVE3	EX	DE,HL	LD	HL,UB.PAR2	CALL	UC.CVXASV.SAVE4:	LD	HL,UA.ZKEND	;Ende ?	CALL	UR.MIMO	JR	C,SV.SAVE3	CALL	U1.PRADR	JR	C,SV.SAVE4	EX	DE,HL	LD	HL,UB.PAR3	CALL	UC.CVXA	CALL	SV.BYANZ	JR	C,SV.SAVE3	JR	Z,SV.SAVE3	CALL	SV.SAVE	CALL	UR.KBM	CALL	SV.DATS1	;1.DATEISATZ SCHREIBEN	CALL	UR.KSL	CALL	UR.KRWW	CALL	U1.DSVG	DEC	B	LD	A,(UB.PAR1+1)	CP	'L'	JR	Z,SV.SAVE5	LD	HL,UE.PUF+1	INC	(HL)	;NEXT RECORD+1	LD	HL,UE.PUF+3	LD	B,(HL)	INC	(HL)	;ANZ.VERZ.EINTR.+1SV.SAVE6:	CALL	UR.KBR	LD	(IX+4),00H	;NEUEN DS-SATZ AUSGEBEN	CALL	UF.EXECSV.SAVE5:	CALL	UK.KBW	DJNZ	SV.SAVE5	CALL	UR.KBR	LD	HL,(UB.PAR5)	LD	(UE.PUF+25),HL	;DATEILAENGE EINTRAGEN	LD	(IX+4),00H	CALL	UF.EXEC	CALL	UR.KRW	CALL	UR.KRA	RET;----------------------------------------------------------------------SV.BYANZ:	LD	HL,(UB.PAR3)	;Byteanzahl berechnen	LD	DE,(UB.PAR2)	OR	A	SBC	HL,DE	RETSV.DATS1:	LD	HL,32	;1. Dateisatz schreiben	CALL	XY.STIDX	DB	9	CALL	U1.VSX	LD	HL,UE.PUF	LD	A,(UB.PAR1)	;NEXT RECORD	INC	A	LD	(HL),A	LD	(IX+4),00H	CALL	UF.EXEC	RETSV.SAVE:	LD	HL,0	CALL	XY.STDX	DB	17	LD	HL,80H	;Blocklaenge	CALL	XY.STIDX	DB	9	CALL	UK.KSPFB	;PufferbereitstellungSV.SAVE1:	CALL	SV.BYANZ	;Byteanzahl berechnen	INC	HL	PUSH	HL	LD	A,H	OR	L	POP	HL	JR	Z,SV.SVLS2	;---> 0 Byte	LD	BC,UE.SVL	;Satzlaenge	OR	A	SBC	HL,BC	JR	C,SV.SVLS	;---> letzter Satz	CALL	SV.SVSZ	JR	SV.SAVE1SV.SVLS:	LD	A,L	ADD	A,UE.SVL	;A:= Laenge des letzten Satzes	CALL	SV.SVSZ2SV.SVLS2:	XOR	A	CALL	UK.PUTK	LD	HL,UA.STADR	;Startadresse	CALL	UR.MIMO	LD	A,(HL)	CP	' '	JR	Z,SV.STAD0	;KEINE EINGABE (0000)	EX	DE,HL	LD	HL,UB.PAR4	CALL	UC.CVXASV.SVLS1:	LD	HL,(UB.PAR4)	LD	A,H	;Startadresse ausgeben	CALL	UK.PUTK	LD	A,L	CALL	UK.PUTK	LD	C,3SV.SVEN2:	LD	B,80H	XOR	ASV.SVEN1:	CALL	UK.PUTK	DJNZ	SV.SVEN1	DEC	C	JR	NZ,SV.SVEN2	CALL	XY.LDDX	DB	17	LD	(UB.PAR5),HL	RETSV.STAD0:	LD	HL,0	LD	(UB.PAR4),HL	JR	SV.SVLS1SV.DALO1:	PUSH	AF	LD	HL,UB.PAR1	DEC	(HL)	INC	HL	LD	A,'L'	LD	(HL),A	POP	AF	RETSV.SVSZ:	LD	A,UE.SVLSV.SVSZ2:	PUSH	AF	CALL	UK.PUTK	LD	DE,(UB.PAR2)	LD	A,D	CALL	UK.PUTK	LD	A,E	CALL	UK.PUTK	POP	AF	LD	B,ASV.SVSZ1:	LD	A,(DE)	CALL	UK.PUTK	INC	DE	DJNZ	SV.SVSZ1	LD	(UB.PAR2),DE	RET;----------------------------------------------------------------------;	END